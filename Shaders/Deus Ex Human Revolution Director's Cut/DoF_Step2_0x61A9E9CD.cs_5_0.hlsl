#include "../Includes/Common.hlsl"

cbuffer cb0 : register(b0)
{
#if 1
  uint2 cb0_m0 : packoffset(c0);
  int2 cb0_m1 : packoffset(c0.z);
#else
  int2 g_i2InputSize : packoffset(c0);
  int2 g_i2OutputSize : packoffset(c0.z);
#endif
};

Texture2D<float4> t0 : register(t0); // g_txInput
RWTexture2D<float4> u0 : register(u0); // g_uavOutput

groupshared float4 g0[2][144];

uint spvBitfieldInsert(uint Base, uint Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint2 spvBitfieldInsert(uint2 Base, uint2 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint3 spvBitfieldInsert(uint3 Base, uint3 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint4 spvBitfieldInsert(uint4 Base, uint4 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

int spvBitfieldSExtract(int Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int2 spvBitfieldSExtract(int2 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int2 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int3 spvBitfieldSExtract(int3 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int3 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int4 spvBitfieldSExtract(int4 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int4 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

[numthreads(32, 2, 1)]
void main(uint3 vThreadGroupID : SV_GroupID, uint3 vThreadIDInGroup : SV_GroupThreadID)
{
    uint3 gl_WorkGroupID = vThreadGroupID;
    uint3 gl_LocalInvocationID = vThreadIDInGroup;

    uint _83 = gl_LocalInvocationID.x << 2u;
    uint _88 = gl_WorkGroupID.x << 7u;
    uint _90 = _83 + _88;
    uint _91 = _90 - 8u;
    uint _96 = cb0_m0.x - 1u;
    int _98 = int(_96);
    uint _102 = gl_LocalInvocationID.y + (gl_WorkGroupID.y << 1u);
    float4 _106 = t0.Load(int3(uint2(uint(clamp(int(_91), 0, _98)), _102), 0u));
    float _111 = _106.w;
    uint _115 = _83 << 2u;
    uint _130 = _115 >> 2u;
    // Note: the original shader packaged RGBA from a UNORM8 into a uint32,
    // however we can't do that with HDR colors, so we turned it into 4 floats.
    g0[gl_LocalInvocationID.y][_130].x = _106.x * _111;
    g0[gl_LocalInvocationID.y][_130].y = _106.y * _111;
    g0[gl_LocalInvocationID.y][_130].z = _106.z * _111;
    g0[gl_LocalInvocationID.y][_130].w = _111;
    float4 _139 = t0.Load(int3(uint2(uint(clamp(int(spvBitfieldInsert(_91, 1u, 0u, 2u)), 0, _98)), _102), 0u));
    float _143 = _139.w;
    uint _162 = spvBitfieldInsert(_115, 1u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_162].x = _139.x * _143;
    g0[gl_LocalInvocationID.y][_162].y = _139.y * _143;
    g0[gl_LocalInvocationID.y][_162].z = _139.z * _143;
    g0[gl_LocalInvocationID.y][_162].w = _143;
    float4 _170 = t0.Load(int3(uint2(uint(clamp(int(spvBitfieldInsert(_91, 2u, 0u, 2u)), 0, _98)), _102), 0u));
    float _174 = _170.w;
    uint _193 = spvBitfieldInsert(_115, 2u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_193].x = _170.x * _174;
    g0[gl_LocalInvocationID.y][_193].y = _170.y * _174;
    g0[gl_LocalInvocationID.y][_193].z = _170.z * _174;
    g0[gl_LocalInvocationID.y][_193].w = _174;
    float4 _201 = t0.Load(int3(uint2(uint(clamp(int(spvBitfieldInsert(_91, 3u, 0u, 2u)), 0, _98)), _102), 0u));
    float _205 = _201.w;
    uint _224 = spvBitfieldInsert(_115, 3u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_224].x = _201.x * _205;
    g0[gl_LocalInvocationID.y][_224].y = _201.y * _205;
    g0[gl_LocalInvocationID.y][_224].z = _201.z * _205;
    g0[gl_LocalInvocationID.y][_224].w = _205;
    if (gl_LocalInvocationID.x < 16u)
    {
        float4 _234 = t0.Load(int3(uint2(clamp((gl_LocalInvocationID.x + _88) + 120u, 0u, _96), _102), 0u));
        float _238 = _234.w;
        uint _257 = (_83 + 512u) >> 2u;
        g0[gl_LocalInvocationID.y][_257].x = _234.x * _238;
        g0[gl_LocalInvocationID.y][_257].y = _234.y * _238;
        g0[gl_LocalInvocationID.y][_257].z = _234.z * _238;
        g0[gl_LocalInvocationID.y][_257].w = _238;
    }
    GroupMemoryBarrierWithGroupSync();
    if (int(_90) < cb0_m1.x)
    {
        uint2 _268 = uint2(_90, _102);
        float4 _269 = t0.Load(int3(_268, 0u));
        float _270 = _269.x;
        float _271 = _269.y;
        float _272 = _269.z;
        float _273 = _269.w;
        uint2 _275 = uint2(_90 + 1u, _102);
        float4 _276 = t0.Load(int3(_275, 0u));
        float _277 = _276.x;
        float _278 = _276.y;
        float _279 = _276.z;
        float _280 = _276.w;
        uint2 _283 = uint2(_90 + 2u, _102);
        float4 _284 = t0.Load(int3(_283, 0u));
        float _285 = _284.x;
        float _286 = _284.y;
        float _287 = _284.z;
        float _288 = _284.w;
        uint2 _291 = uint2(_90 + 3u, _102);
        float4 _292 = t0.Load(int3(_291, 0u));
        float _293 = _292.x;
        float _294 = _292.y;
        float _295 = _292.z;
        float _296 = _292.w;
        if ((((_273 + _280) + _288) + _296) != 0.0f)
        {
            float _315 = float(g0[gl_LocalInvocationID.y][_162].r);
            float _318 = float(g0[gl_LocalInvocationID.y][_162].g);
            float _319 = float(g0[gl_LocalInvocationID.y][_162].b);
            float _321 = float(g0[gl_LocalInvocationID.y][_162].a);
            float _325 = float(g0[gl_LocalInvocationID.y][_193].r);
            float _328 = float(g0[gl_LocalInvocationID.y][_193].g);
            float _329 = float(g0[gl_LocalInvocationID.y][_193].b);
            float _331 = float(g0[gl_LocalInvocationID.y][_193].a);
            float _335 = float(g0[gl_LocalInvocationID.y][_224].r);
            float _338 = float(g0[gl_LocalInvocationID.y][_224].g);
            float _339 = float(g0[gl_LocalInvocationID.y][_224].b);
            float _341 = float(g0[gl_LocalInvocationID.y][_224].a);
            uint _342 = _115 + 16u;
            uint _346 = _342 >> 2u;
            float _351 = float(g0[gl_LocalInvocationID.y][_346].r);
            float _354 = float(g0[gl_LocalInvocationID.y][_346].g);
            float _355 = float(g0[gl_LocalInvocationID.y][_346].b);
            float _357 = float(g0[gl_LocalInvocationID.y][_346].a);
            uint _407 = spvBitfieldInsert(_342, 1u, 2u, 2u) >> 2u;
            float _412 = float(g0[gl_LocalInvocationID.y][_407].r);
            float _415 = float(g0[gl_LocalInvocationID.y][_407].g);
            float _416 = float(g0[gl_LocalInvocationID.y][_407].b);
            float _418 = float(g0[gl_LocalInvocationID.y][_407].a);
            uint _436 = spvBitfieldInsert(_342, 2u, 2u, 2u) >> 2u;
            float _441 = float(g0[gl_LocalInvocationID.y][_436].r);
            float _444 = float(g0[gl_LocalInvocationID.y][_436].g);
            float _445 = float(g0[gl_LocalInvocationID.y][_436].b);
            float _447 = float(g0[gl_LocalInvocationID.y][_436].a);
            uint _465 = spvBitfieldInsert(_342, 3u, 2u, 2u) >> 2u;
            float _470 = float(g0[gl_LocalInvocationID.y][_465].r);
            float _473 = float(g0[gl_LocalInvocationID.y][_465].g);
            float _474 = float(g0[gl_LocalInvocationID.y][_465].b);
            float _476 = float(g0[gl_LocalInvocationID.y][_465].a);
            uint _493 = (_115 + 32u) >> 2u;
            float _498 = float(g0[gl_LocalInvocationID.y][_493].r);
            float _501 = float(g0[gl_LocalInvocationID.y][_493].g);
            float _502 = float(g0[gl_LocalInvocationID.y][_493].b);
            float _504 = float(g0[gl_LocalInvocationID.y][_493].a);
            uint _521 = (_115 + 36u) >> 2u;
            float _526 = float(g0[gl_LocalInvocationID.y][_521].r);
            float _529 = float(g0[gl_LocalInvocationID.y][_521].g);
            float _530 = float(g0[gl_LocalInvocationID.y][_521].b);
            float _532 = float(g0[gl_LocalInvocationID.y][_521].a);
            uint _549 = (_115 + 40u) >> 2u;
            float _554 = float(g0[gl_LocalInvocationID.y][_549].r);
            float _557 = float(g0[gl_LocalInvocationID.y][_549].g);
            float _558 = float(g0[gl_LocalInvocationID.y][_549].b);
            float _560 = float(g0[gl_LocalInvocationID.y][_549].a);
            uint _581 = (_115 + 44u) >> 2u;
            float _586 = float(g0[gl_LocalInvocationID.y][_581].r);
            float _589 = float(g0[gl_LocalInvocationID.y][_581].g);
            float _590 = float(g0[gl_LocalInvocationID.y][_581].b);
            float _592 = float(g0[gl_LocalInvocationID.y][_581].a);
            uint _609 = (_115 + 48u) >> 2u;
            float _614 = float(g0[gl_LocalInvocationID.y][_609].r);
            float _617 = float(g0[gl_LocalInvocationID.y][_609].g);
            float _618 = float(g0[gl_LocalInvocationID.y][_609].b);
            float _620 = float(g0[gl_LocalInvocationID.y][_609].a);
            uint _637 = (_115 + 52u) >> 2u;
            float _642 = float(g0[gl_LocalInvocationID.y][_637].r);
            float _645 = float(g0[gl_LocalInvocationID.y][_637].g);
            float _646 = float(g0[gl_LocalInvocationID.y][_637].b);
            float _648 = float(g0[gl_LocalInvocationID.y][_637].a);
            uint _665 = (_115 + 56u) >> 2u;
            float _670 = float(g0[gl_LocalInvocationID.y][_665].r);
            float _673 = float(g0[gl_LocalInvocationID.y][_665].g);
            float _674 = float(g0[gl_LocalInvocationID.y][_665].b);
            float _676 = float(g0[gl_LocalInvocationID.y][_665].a);
            uint _697 = (_115 + 60u) >> 2u;
            float _702 = float(g0[gl_LocalInvocationID.y][_697].r);
            float _705 = float(g0[gl_LocalInvocationID.y][_697].g);
            float _706 = float(g0[gl_LocalInvocationID.y][_697].b);
            float _708 = float(g0[gl_LocalInvocationID.y][_697].a);
            uint _725 = (_115 + 64u) >> 2u;
            float _730 = float(g0[gl_LocalInvocationID.y][_725].r);
            float _733 = float(g0[gl_LocalInvocationID.y][_725].g);
            float _734 = float(g0[gl_LocalInvocationID.y][_725].b);
            float _736 = float(g0[gl_LocalInvocationID.y][_725].a);
            uint _753 = (_115 + 68u) >> 2u;
            float _758 = float(g0[gl_LocalInvocationID.y][_753].r);
            float _761 = float(g0[gl_LocalInvocationID.y][_753].g);
            float _762 = float(g0[gl_LocalInvocationID.y][_753].b);
            float _764 = float(g0[gl_LocalInvocationID.y][_753].a);
            uint _781 = (_115 + 72u) >> 2u;
            float _786 = float(g0[gl_LocalInvocationID.y][_781].r);
            float _789 = float(g0[gl_LocalInvocationID.y][_781].g);
            float _790 = float(g0[gl_LocalInvocationID.y][_781].b);
            float _792 = float(g0[gl_LocalInvocationID.y][_781].a);
            uint _810 = (_115 + 76u) >> 2u;
            float _838 = mad(_736, 5.2932344260625541210174560546875e-05f, mad(_708, 8.4585641161538660526275634765625e-05f, mad(_676, 0.0001269780914299190044403076171875f, mad(_648, 0.00017906780703924596309661865234375f, mad(_620, 0.00023722629703115671873092651367188f, mad(_592, 0.00029523289413191378116607666015625f, mad(_560, 0.000345162232406437397003173828125f, mad(_532, 0.00037908655940555036067962646484375f, mad(_504, 0.00039112006197683513164520263671875f, mad(_476, 0.00037908655940555036067962646484375f, mad(_447, 0.000345162232406437397003173828125f, mad(_418, 0.00029523289413191378116607666015625f, mad(_357, 0.00023722629703115671873092651367188f, mad(_341, 0.00017906780703924596309661865234375f, mad(_331, 0.0001269780914299190044403076171875f, (_321 * 8.4585641161538660526275634765625e-05f) + (float(g0[gl_LocalInvocationID.y][_130].a) * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _842 = mad(_764, 5.2932344260625541210174560546875e-05f, mad(_736, 8.4585641161538660526275634765625e-05f, mad(_708, 0.0001269780914299190044403076171875f, mad(_676, 0.00017906780703924596309661865234375f, mad(_648, 0.00023722629703115671873092651367188f, mad(_620, 0.00029523289413191378116607666015625f, mad(_592, 0.000345162232406437397003173828125f, mad(_560, 0.00037908655940555036067962646484375f, mad(_532, 0.00039112006197683513164520263671875f, mad(_504, 0.00037908655940555036067962646484375f, mad(_476, 0.000345162232406437397003173828125f, mad(_447, 0.00029523289413191378116607666015625f, mad(_418, 0.00023722629703115671873092651367188f, mad(_357, 0.00017906780703924596309661865234375f, mad(_341, 0.0001269780914299190044403076171875f, (_331 * 8.4585641161538660526275634765625e-05f) + (_321 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _846 = mad(_792, 5.2932344260625541210174560546875e-05f, mad(_764, 8.4585641161538660526275634765625e-05f, mad(_736, 0.0001269780914299190044403076171875f, mad(_708, 0.00017906780703924596309661865234375f, mad(_676, 0.00023722629703115671873092651367188f, mad(_648, 0.00029523289413191378116607666015625f, mad(_620, 0.000345162232406437397003173828125f, mad(_592, 0.00037908655940555036067962646484375f, mad(_560, 0.00039112006197683513164520263671875f, mad(_532, 0.00037908655940555036067962646484375f, mad(_504, 0.000345162232406437397003173828125f, mad(_476, 0.00029523289413191378116607666015625f, mad(_447, 0.00023722629703115671873092651367188f, mad(_418, 0.00017906780703924596309661865234375f, mad(_357, 0.0001269780914299190044403076171875f, (_341 * 8.4585641161538660526275634765625e-05f) + (_331 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _850 = mad(float(g0[gl_LocalInvocationID.y][_810].a), 5.2932344260625541210174560546875e-05f, mad(_792, 8.4585641161538660526275634765625e-05f, mad(_764, 0.0001269780914299190044403076171875f, mad(_736, 0.00017906780703924596309661865234375f, mad(_708, 0.00023722629703115671873092651367188f, mad(_676, 0.00029523289413191378116607666015625f, mad(_648, 0.000345162232406437397003173828125f, mad(_620, 0.00037908655940555036067962646484375f, mad(_592, 0.00039112006197683513164520263671875f, mad(_560, 0.00037908655940555036067962646484375f, mad(_532, 0.000345162232406437397003173828125f, mad(_504, 0.00029523289413191378116607666015625f, mad(_476, 0.00023722629703115671873092651367188f, mad(_447, 0.00017906780703924596309661865234375f, mad(_418, 0.0001269780914299190044403076171875f, (_357 * 8.4585641161538660526275634765625e-05f) + (_341 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            u0[_268] = float4(mad(_273, (mad(_730, 5.2932344260625541210174560546875e-05f, mad(_702, 8.4585641161538660526275634765625e-05f, mad(_670, 0.0001269780914299190044403076171875f, mad(_642, 0.00017906780703924596309661865234375f, mad(_614, 0.00023722629703115671873092651367188f, mad(_586, 0.00029523289413191378116607666015625f, mad(_554, 0.000345162232406437397003173828125f, mad(_526, 0.00037908655940555036067962646484375f, mad(_498, 0.00039112006197683513164520263671875f, mad(_470, 0.00037908655940555036067962646484375f, mad(_441, 0.000345162232406437397003173828125f, mad(_412, 0.00029523289413191378116607666015625f, mad(_351, 0.00023722629703115671873092651367188f, mad(_335, 0.00017906780703924596309661865234375f, mad(_325, 0.0001269780914299190044403076171875f, (_315 * 8.4585641161538660526275634765625e-05f) + (float(g0[gl_LocalInvocationID.y][_130].r) * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _838) - _270, _270), mad(_273, (mad(_733, 5.2932344260625541210174560546875e-05f, mad(_705, 8.4585641161538660526275634765625e-05f, mad(_673, 0.0001269780914299190044403076171875f, mad(_645, 0.00017906780703924596309661865234375f, mad(_617, 0.00023722629703115671873092651367188f, mad(_589, 0.00029523289413191378116607666015625f, mad(_557, 0.000345162232406437397003173828125f, mad(_529, 0.00037908655940555036067962646484375f, mad(_501, 0.00039112006197683513164520263671875f, mad(_473, 0.00037908655940555036067962646484375f, mad(_444, 0.000345162232406437397003173828125f, mad(_415, 0.00029523289413191378116607666015625f, mad(_354, 0.00023722629703115671873092651367188f, mad(_338, 0.00017906780703924596309661865234375f, mad(_328, 0.0001269780914299190044403076171875f, (float(g0[gl_LocalInvocationID.y][_130].g) * 5.2932344260625541210174560546875e-05f) + (_318 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _838) - _271, _271), mad(_273, (mad(_734, 5.2932344260625541210174560546875e-05f, mad(_706, 8.4585641161538660526275634765625e-05f, mad(_674, 0.0001269780914299190044403076171875f, mad(_646, 0.00017906780703924596309661865234375f, mad(_618, 0.00023722629703115671873092651367188f, mad(_590, 0.00029523289413191378116607666015625f, mad(_558, 0.000345162232406437397003173828125f, mad(_530, 0.00037908655940555036067962646484375f, mad(_502, 0.00039112006197683513164520263671875f, mad(_474, 0.00037908655940555036067962646484375f, mad(_445, 0.000345162232406437397003173828125f, mad(_416, 0.00029523289413191378116607666015625f, mad(_355, 0.00023722629703115671873092651367188f, mad(_339, 0.00017906780703924596309661865234375f, mad(_329, 0.0001269780914299190044403076171875f, (float(g0[gl_LocalInvocationID.y][_130].b) * 5.2932344260625541210174560546875e-05f) + (_319 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _838) - _272, _272), _273);
            u0[_275] = float4(mad(_280, (mad(_758, 5.2932344260625541210174560546875e-05f, mad(_730, 8.4585641161538660526275634765625e-05f, mad(_702, 0.0001269780914299190044403076171875f, mad(_670, 0.00017906780703924596309661865234375f, mad(_642, 0.00023722629703115671873092651367188f, mad(_614, 0.00029523289413191378116607666015625f, mad(_586, 0.000345162232406437397003173828125f, mad(_554, 0.00037908655940555036067962646484375f, mad(_526, 0.00039112006197683513164520263671875f, mad(_498, 0.00037908655940555036067962646484375f, mad(_470, 0.000345162232406437397003173828125f, mad(_441, 0.00029523289413191378116607666015625f, mad(_412, 0.00023722629703115671873092651367188f, mad(_351, 0.00017906780703924596309661865234375f, mad(_335, 0.0001269780914299190044403076171875f, (_325 * 8.4585641161538660526275634765625e-05f) + (_315 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _842) - _277, _277), mad(_280, (mad(_761, 5.2932344260625541210174560546875e-05f, mad(_733, 8.4585641161538660526275634765625e-05f, mad(_705, 0.0001269780914299190044403076171875f, mad(_673, 0.00017906780703924596309661865234375f, mad(_645, 0.00023722629703115671873092651367188f, mad(_617, 0.00029523289413191378116607666015625f, mad(_589, 0.000345162232406437397003173828125f, mad(_557, 0.00037908655940555036067962646484375f, mad(_529, 0.00039112006197683513164520263671875f, mad(_501, 0.00037908655940555036067962646484375f, mad(_473, 0.000345162232406437397003173828125f, mad(_444, 0.00029523289413191378116607666015625f, mad(_415, 0.00023722629703115671873092651367188f, mad(_354, 0.00017906780703924596309661865234375f, mad(_338, 0.0001269780914299190044403076171875f, (_318 * 5.2932344260625541210174560546875e-05f) + (_328 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _842) - _278, _278), mad(_280, (mad(_762, 5.2932344260625541210174560546875e-05f, mad(_734, 8.4585641161538660526275634765625e-05f, mad(_706, 0.0001269780914299190044403076171875f, mad(_674, 0.00017906780703924596309661865234375f, mad(_646, 0.00023722629703115671873092651367188f, mad(_618, 0.00029523289413191378116607666015625f, mad(_590, 0.000345162232406437397003173828125f, mad(_558, 0.00037908655940555036067962646484375f, mad(_530, 0.00039112006197683513164520263671875f, mad(_502, 0.00037908655940555036067962646484375f, mad(_474, 0.000345162232406437397003173828125f, mad(_445, 0.00029523289413191378116607666015625f, mad(_416, 0.00023722629703115671873092651367188f, mad(_355, 0.00017906780703924596309661865234375f, mad(_339, 0.0001269780914299190044403076171875f, (_319 * 5.2932344260625541210174560546875e-05f) + (_329 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _842) - _279, _279), _280);
            u0[_283] = float4(mad(_288, (mad(_786, 5.2932344260625541210174560546875e-05f, mad(_758, 8.4585641161538660526275634765625e-05f, mad(_730, 0.0001269780914299190044403076171875f, mad(_702, 0.00017906780703924596309661865234375f, mad(_670, 0.00023722629703115671873092651367188f, mad(_642, 0.00029523289413191378116607666015625f, mad(_614, 0.000345162232406437397003173828125f, mad(_586, 0.00037908655940555036067962646484375f, mad(_554, 0.00039112006197683513164520263671875f, mad(_526, 0.00037908655940555036067962646484375f, mad(_498, 0.000345162232406437397003173828125f, mad(_470, 0.00029523289413191378116607666015625f, mad(_441, 0.00023722629703115671873092651367188f, mad(_412, 0.00017906780703924596309661865234375f, mad(_351, 0.0001269780914299190044403076171875f, (_335 * 8.4585641161538660526275634765625e-05f) + (_325 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _846) - _285, _285), mad(_288, (mad(_789, 5.2932344260625541210174560546875e-05f, mad(_761, 8.4585641161538660526275634765625e-05f, mad(_733, 0.0001269780914299190044403076171875f, mad(_705, 0.00017906780703924596309661865234375f, mad(_673, 0.00023722629703115671873092651367188f, mad(_645, 0.00029523289413191378116607666015625f, mad(_617, 0.000345162232406437397003173828125f, mad(_589, 0.00037908655940555036067962646484375f, mad(_557, 0.00039112006197683513164520263671875f, mad(_529, 0.00037908655940555036067962646484375f, mad(_501, 0.000345162232406437397003173828125f, mad(_473, 0.00029523289413191378116607666015625f, mad(_444, 0.00023722629703115671873092651367188f, mad(_415, 0.00017906780703924596309661865234375f, mad(_354, 0.0001269780914299190044403076171875f, (_328 * 5.2932344260625541210174560546875e-05f) + (_338 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _846) - _286, _286), mad(_288, (mad(_790, 5.2932344260625541210174560546875e-05f, mad(_762, 8.4585641161538660526275634765625e-05f, mad(_734, 0.0001269780914299190044403076171875f, mad(_706, 0.00017906780703924596309661865234375f, mad(_674, 0.00023722629703115671873092651367188f, mad(_646, 0.00029523289413191378116607666015625f, mad(_618, 0.000345162232406437397003173828125f, mad(_590, 0.00037908655940555036067962646484375f, mad(_558, 0.00039112006197683513164520263671875f, mad(_530, 0.00037908655940555036067962646484375f, mad(_502, 0.000345162232406437397003173828125f, mad(_474, 0.00029523289413191378116607666015625f, mad(_445, 0.00023722629703115671873092651367188f, mad(_416, 0.00017906780703924596309661865234375f, mad(_355, 0.0001269780914299190044403076171875f, (_329 * 5.2932344260625541210174560546875e-05f) + (_339 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _846) - _287, _287), _288);
            u0[_291] = float4(mad(_296, (mad(float(g0[gl_LocalInvocationID.y][_810].r), 5.2932344260625541210174560546875e-05f, mad(_786, 8.4585641161538660526275634765625e-05f, mad(_758, 0.0001269780914299190044403076171875f, mad(_730, 0.00017906780703924596309661865234375f, mad(_702, 0.00023722629703115671873092651367188f, mad(_670, 0.00029523289413191378116607666015625f, mad(_642, 0.000345162232406437397003173828125f, mad(_614, 0.00037908655940555036067962646484375f, mad(_586, 0.00039112006197683513164520263671875f, mad(_554, 0.00037908655940555036067962646484375f, mad(_526, 0.000345162232406437397003173828125f, mad(_498, 0.00029523289413191378116607666015625f, mad(_470, 0.00023722629703115671873092651367188f, mad(_441, 0.00017906780703924596309661865234375f, mad(_412, 0.0001269780914299190044403076171875f, (_351 * 8.4585641161538660526275634765625e-05f) + (_335 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _850) - _293, _293), mad(_296, (mad(float(g0[gl_LocalInvocationID.y][_810].g), 5.2932344260625541210174560546875e-05f, mad(_789, 8.4585641161538660526275634765625e-05f, mad(_761, 0.0001269780914299190044403076171875f, mad(_733, 0.00017906780703924596309661865234375f, mad(_705, 0.00023722629703115671873092651367188f, mad(_673, 0.00029523289413191378116607666015625f, mad(_645, 0.000345162232406437397003173828125f, mad(_617, 0.00037908655940555036067962646484375f, mad(_589, 0.00039112006197683513164520263671875f, mad(_557, 0.00037908655940555036067962646484375f, mad(_529, 0.000345162232406437397003173828125f, mad(_501, 0.00029523289413191378116607666015625f, mad(_473, 0.00023722629703115671873092651367188f, mad(_444, 0.00017906780703924596309661865234375f, mad(_415, 0.0001269780914299190044403076171875f, (_338 * 5.2932344260625541210174560546875e-05f) + (_354 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _850) - _294, _294), mad(_296, (mad(float(g0[gl_LocalInvocationID.y][_810].b), 5.2932344260625541210174560546875e-05f, mad(_790, 8.4585641161538660526275634765625e-05f, mad(_762, 0.0001269780914299190044403076171875f, mad(_734, 0.00017906780703924596309661865234375f, mad(_706, 0.00023722629703115671873092651367188f, mad(_674, 0.00029523289413191378116607666015625f, mad(_646, 0.000345162232406437397003173828125f, mad(_618, 0.00037908655940555036067962646484375f, mad(_590, 0.00039112006197683513164520263671875f, mad(_558, 0.00037908655940555036067962646484375f, mad(_530, 0.000345162232406437397003173828125f, mad(_502, 0.00029523289413191378116607666015625f, mad(_474, 0.00023722629703115671873092651367188f, mad(_445, 0.00017906780703924596309661865234375f, mad(_416, 0.0001269780914299190044403076171875f, (_339 * 5.2932344260625541210174560546875e-05f) + (_355 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _850) - _295, _295), _296);
        }
        else
        {
            u0[_268] = _269;
            u0[_275] = _276;
            u0[_283] = _284;
            u0[_291] = _292;
        }
    }
}