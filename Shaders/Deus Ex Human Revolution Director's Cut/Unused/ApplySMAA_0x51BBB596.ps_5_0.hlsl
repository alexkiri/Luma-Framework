Texture2D<float4> g_txInitialImage : register(t0);
Texture2D<uint2> g_txCount : register(t2);

#define cmp

// Might be MLAA actually, as that's what it says in the settings
void main(
  float4 v0 : SV_Position0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_TARGET0)
{
#if 1 // Disabled as this is broken
  o0.xyzw = g_txInitialImage.Load(int3(v0.xy, 0)).xyzw;
  return;
#endif
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
  r0.xy = (int2)v0.xy;
  r0.z = 0;
  r1.xyzw = g_txInitialImage.Load(r0.xyz).xyzw;
  r2.xy = g_txCount.Load(r0.xyz).xy;
  r3.xyz = (int3)r0.xyz + int3(0,1,0);
  r4.x = g_txCount.Load(r3.xyz).x;
  r5.xyz = (int3)r0.xyz + int3(-1,0,0);
  r4.y = g_txCount.Load(r5.xyz).y;
  r2.zw = (int2)r2.xy & int2(136,136);
  if (r2.z != 0) {
    if (3 == 0) r2.z = 0; else if (3+4 < 32) {     r2.z = (uint)r2.x << (32-(3 + 4)); r2.z = (uint)r2.z >> (32-3);    } else r2.z = (uint)r2.x >> 4;
    r6.xyz = (int3)r2.xxx & int3(7,8,128);
    r7.xyzw = (int4)r0.xyzz + int4(0,-1,0,0);
    r7.xyzw = g_txInitialImage.Load(r7.xyz).xyzw;
    r2.x = (int)r2.z + (int)r6.x;
    r7.xyzw = r7.xyzw + -r1.xyzw;
    r8.xyzw = r7.xyzw * float4(0.125,0.125,0.125,0.125) + r1.xyzw;
    r9.x = r6.y ? r6.x : 8;
    r2.z = r6.z ? r2.z : 8;
    r4.z = (int)r2.z + (int)r9.x;
    r4.z = (int)r4.z + 1;
    r4.z = (int)r4.z;
    r4.w = 0.5 * r4.z;
    r6.x = (int)r2.z;
    r10.x = -(int)r2.z;
    r10.yzw = float3(0,0,0);
    r10.xyzw = (int4)r0.xyzz + (int4)r10.xyzw;
    r10.xyz = g_txInitialImage.Load(r10.xyz).xyz;
    r11.x = (int)-r2.z + -1;
    r11.yzw = float3(0,0,0);
    r11.xyzw = (int4)r0.xyzz + (int4)r11.xyzw;
    r11.xyz = g_txInitialImage.Load(r11.xyz).xyz;
    r2.z = dot(r10.xyz, float3(0.300000012,0.589999974,0.109999999));
    r6.y = dot(r11.xyz, float3(0.300000012,0.589999974,0.109999999));
    r2.z = -r6.y + r2.z;
    r2.z = cmp(0.0833333358 < abs(r2.z));
    r6.y = r2.z ? 0.000000 : 0;
    r9.yzw = float3(0,0,0);
    r10.xyzw = (int4)r0.xyzz + (int4)r9.xyzw;
    r10.xyz = g_txInitialImage.Load(r10.xyz).xyz;
    r9.x = (int)r9.x + (int)r0.x;
    r11.xzw = float3(1,0,0);
    r11.y = r0.y;
    r9.yzw = float3(0,0,0);
    r9.xyzw = (int4)r11.xyzw + (int4)r9.xyzw;
    r9.xyz = g_txInitialImage.Load(r9.xyz).xyz;
    r6.z = dot(r10.xyz, float3(0.300000012,0.589999974,0.109999999));
    r6.w = dot(r9.xyz, float3(0.300000012,0.589999974,0.109999999));
    r6.z = -r6.w + r6.z;
    r6.z = cmp(0.0833333358 < abs(r6.z));
    r2.z = r2.z ? 3 : 2;
    r2.z = r6.z ? r2.z : r6.y;
    r6.yzw = cmp((int3)r2.zzz == int3(2,1,3));
    r2.z = cmp(r6.x >= r4.w);
    r2.z = r6.y ? r2.z : 0;
    r4.w = cmp(r4.w >= r6.x);
    r4.w = r6.z ? r4.w : 0;
    r2.z = (int)r2.z | (int)r4.w;
    r2.z = (int)r6.w | (int)r2.z;
    r4.w = 1 / r4.z;
    r4.z = -r6.x + r4.z;
    r6.x = r4.w * r4.z + -0.5;
    r4.z = -1 + r4.z;
    r4.z = r4.w * r4.z + -0.5;
    r4.z = abs(r4.z) + abs(r6.x);
    r4.z = 0.5 * r4.z;
    r6.xyz = r4.zzz * r7.xyz + r1.xyz;
    r1.xyz = r2.zzz ? r6.xyz : r1.xyz;
    r1.xyzw = r2.xxxx ? r1.xyzw : r8.xyzw;
  }
  r2.x = (int)r4.x & 136;
  if (r2.x != 0) {
    if (3 == 0) r2.x = 0; else if (3+4 < 32) {     r2.x = (uint)r4.x << (32-(3 + 4)); r2.x = (uint)r2.x >> (32-3);    } else r2.x = (uint)r4.x >> 4;
    r4.xzw = (int3)r4.xxx & int3(7,8,128);
    r6.xyzw = g_txInitialImage.Load(r3.xyz).xyzw;
    r2.z = (int)r2.x + (int)r4.x;
    r6.xyzw = r6.xyzw + -r1.xyzw;
    r7.xyzw = r6.xyzw * float4(0.125,0.125,0.125,0.125) + r1.xyzw;
    r8.x = r4.z ? r4.x : 8;
    r2.x = r4.w ? r2.x : 8;
    r4.x = (int)r2.x + (int)r8.x;
    r4.x = (int)r4.x + 1;
    r4.x = (int)r4.x;
    r4.z = 0.5 * r4.x;
    r4.w = (int)r2.x;
    r9.x = -(int)r2.x;
    r9.yzw = float3(0,0,0);
    r9.xyzw = (int4)r3.xyzz + (int4)r9.xyzw;
    r9.xyz = g_txInitialImage.Load(r9.xyz).xyz;
    r10.x = (int)-r2.x + -1;
    r10.yzw = float3(0,0,0);
    r10.xyzw = (int4)r3.xyzz + (int4)r10.xyzw;
    r10.xyz = g_txInitialImage.Load(r10.xyz).xyz;
    r2.x = dot(r9.xyz, float3(0.300000012,0.589999974,0.109999999));
    r3.y = dot(r10.xyz, float3(0.300000012,0.589999974,0.109999999));
    r2.x = -r3.y + r2.x;
    r2.x = cmp(0.0833333358 < abs(r2.x));
    r3.y = r2.x ? 0.000000 : 0;
    r3.w = r0.y;
    r8.yzw = float3(1.40129846e-045,0,0);
    r9.xyzw = (int4)r3.xwzz + (int4)r8.xyzw;
    r9.xyz = g_txInitialImage.Load(r9.xyz).xyz;
    r8.x = (int)r8.x + (int)r3.x;
    r10.x = 1;
    r10.yzw = r3.wzz;
    r8.yzw = float3(1.40129846e-045,0,0);
    r8.xyzw = (int4)r10.xyzw + (int4)r8.xyzw;
    r8.xyz = g_txInitialImage.Load(r8.xyz).xyz;
    r3.x = dot(r9.xyz, float3(0.300000012,0.589999974,0.109999999));
    r3.z = dot(r8.xyz, float3(0.300000012,0.589999974,0.109999999));
    r3.x = -r3.z + r3.x;
    r3.x = cmp(0.0833333358 < abs(r3.x));
    r2.x = r2.x ? 3 : 2;
    r2.x = r3.x ? r2.x : r3.y;
    r3.xyz = cmp((int3)r2.xxx == int3(2,1,0));
    r2.x = cmp(r4.z >= r4.w);
    r2.x = r3.x ? r2.x : 0;
    r3.x = cmp(r4.w >= r4.z);
    r3.x = r3.y ? r3.x : 0;
    r2.x = (int)r2.x | (int)r3.x;
    r2.x = (int)r3.z | (int)r2.x;
    r3.x = 1 / r4.x;
    r3.y = -r4.w + r4.x;
    r3.z = r3.x * r3.y + -0.5;
    r3.y = -1 + r3.y;
    r3.x = r3.x * r3.y + -0.5;
    r3.x = abs(r3.x) + abs(r3.z);
    r3.x = 0.5 * r3.x;
    r3.xyz = r3.xxx * r6.xyz + r1.xyz;
    r1.xyz = r2.xxx ? r3.xyz : r1.xyz;
    r1.xyzw = r2.zzzz ? r1.xyzw : r7.xyzw;
  }
  if (r2.w != 0) {
    if (3 == 0) r2.x = 0; else if (3+4 < 32) {     r2.x = (uint)r2.y << (32-(3 + 4)); r2.x = (uint)r2.x >> (32-3);    } else r2.x = (uint)r2.y >> 4;
    r2.yzw = (int3)r2.yyy & int3(7,8,128);
    r3.xyzw = (int4)r0.xyzz + int4(1,0,0,0);
    r3.xyzw = g_txInitialImage.Load(r3.xyz).xyzw;
    r4.x = (int)r2.x + (int)r2.y;
    r3.xyzw = r3.xyzw + -r1.xyzw;
    r6.xyzw = r3.xyzw * float4(0.125,0.125,0.125,0.125) + r1.xyzw;
    r2.xy = r2.wz ? r2.xy : float2(8,8);
    r2.z = (int)r2.x + (int)r2.y;
    r2.z = (int)r2.z + 1;
    r2.z = (int)r2.z;
    r2.w = 0.5 * r2.z;
    r3.w = (int)r2.x;
    r7.xzw = float3(0,0,0);
    r7.y = r2.x;
    r7.xyzw = (int4)r0.xyzz + (int4)r7.xyzw;
    r7.xyz = g_txInitialImage.Load(r7.xyz).xyz;
    r8.xzw = float3(0,0,0);
    r8.y = (int)r2.x + 1;
    r8.xyzw = (int4)r0.xyzz + (int4)r8.xyzw;
    r8.xyz = g_txInitialImage.Load(r8.xyz).xyz;
    r2.x = dot(r7.xyz, float3(0.300000012,0.589999974,0.109999999));
    r4.z = dot(r8.xyz, float3(0.300000012,0.589999974,0.109999999));
    r2.x = -r4.z + r2.x;
    r2.x = cmp(0.0833333358 < abs(r2.x));
    r4.z = r2.x ? 0.000000 : 0;
    r7.y = -(int)r2.y;
    r7.xzw = float3(0,0,0);
    r8.xyzw = (int4)r0.xyzz + (int4)r7.xyzw;
    r8.xyz = g_txInitialImage.Load(r8.xyz).xyz;
    r7.y = (int)r7.y + (int)r0.y;
    r0.w = -1;
    r7.xzw = float3(0,0,0);
    r7.xyzw = (int4)r0.xwzz + (int4)r7.xyzw;
    r7.xyz = g_txInitialImage.Load(r7.xyz).xyz;
    r0.y = dot(r8.xyz, float3(0.300000012,0.589999974,0.109999999));
    r0.z = dot(r7.xyz, float3(0.300000012,0.589999974,0.109999999));
    r0.y = -r0.z + r0.y;
    r0.y = cmp(0.0833333358 < abs(r0.y));
    r0.z = r2.x ? 3 : 2;
    r0.y = r0.y ? r0.z : r4.z;
    r0.yzw = cmp((int3)r0.yyy == int3(2,1,3));
    r2.x = cmp(r3.w >= r2.w);
    r0.y = r0.y ? r2.x : 0;
    r2.x = cmp(r2.w >= r3.w);
    r0.z = r0.z ? r2.x : 0;
    r0.y = (int)r0.y | (int)r0.z;
    r0.y = (int)r0.w | (int)r0.y;
    r0.z = 1 / r2.z;
    r0.w = -r3.w + r2.z;
    r2.x = r0.z * r0.w + -0.5;
    r0.w = -1 + r0.w;
    r0.z = r0.z * r0.w + -0.5;
    r0.z = abs(r0.z) + abs(r2.x);
    r0.z = 0.5 * r0.z;
    r2.xyz = r0.zzz * r3.xyz + r1.xyz;
    r1.xyz = r0.yyy ? r2.xyz : r1.xyz;
    r1.xyzw = r4.xxxx ? r1.xyzw : r6.xyzw;
  }
  r0.y = (int)r4.y & 136;
  if (r0.y != 0) {
    if (3 == 0) r0.y = 0; else if (3+4 < 32) {     r0.y = (uint)r4.y << (32-(3 + 4)); r0.y = (uint)r0.y >> (32-3);    } else r0.y = (uint)r4.y >> 4;
    r2.xyz = (int3)r4.yyy & int3(7,8,128);
    r3.xyzw = g_txInitialImage.Load(r5.xyz).xyzw;
    r0.z = (int)r0.y + (int)r2.x;
    r3.xyzw = r3.xyzw + -r1.xyzw;
    r4.xyzw = r3.xyzw * float4(0.125,0.125,0.125,0.125) + r1.xyzw;
    r0.w = r2.y ? r2.x : 8;
    r0.y = r2.z ? r0.y : 8;
    r2.x = (int)r0.y + (int)r0.w;
    r2.x = (int)r2.x + 1;
    r2.x = (int)r2.x;
    r2.y = 0.5 * r2.x;
    r2.z = (int)r0.y;
    r6.xzw = float3(0,0,0);
    r6.y = r0.y;
    r6.xyzw = (int4)r5.xyzz + (int4)r6.xyzw;
    r6.xyz = g_txInitialImage.Load(r6.xyz).xyz;
    r7.xzw = float3(0,0,0);
    r7.y = (int)r0.y + 1;
    r7.xyzw = (int4)r5.xyzz + (int4)r7.xyzw;
    r7.xyz = g_txInitialImage.Load(r7.xyz).xyz;
    r0.y = dot(r6.xyz, float3(0.300000012,0.589999974,0.109999999));
    r2.w = dot(r7.xyz, float3(0.300000012,0.589999974,0.109999999));
    r0.y = -r2.w + r0.y;
    r0.y = cmp(0.0833333358 < abs(r0.y));
    r2.w = r0.y ? 0.000000 : 0;
    r6.y = -(int)r0.w;
    r5.w = r0.x;
    r6.xzw = float3(-1,0,0);
    r7.xyzw = (int4)r5.wyzz + (int4)r6.xyzw;
    r7.xyz = g_txInitialImage.Load(r7.xyz).xyz;
    r6.y = (int)r6.y + (int)r5.y;
    r5.xzw = r5.wzz;
    r5.y = -1;
    r6.xzw = float3(-1,0,0);
    r5.xyzw = (int4)r5.xyzw + (int4)r6.xyzw;
    r5.xyz = g_txInitialImage.Load(r5.xyz).xyz;
    r0.x = dot(r7.xyz, float3(0.300000012,0.589999974,0.109999999));
    r0.w = dot(r5.xyz, float3(0.300000012,0.589999974,0.109999999));
    r0.x = -r0.w + r0.x;
    r0.x = cmp(0.0833333358 < abs(r0.x));
    r0.y = r0.y ? 3 : 2;
    r0.x = r0.x ? r0.y : r2.w;
    r0.xyw = cmp((int3)r0.xxx == int3(2,1,0));
    r2.w = cmp(r2.y >= r2.z);
    r0.x = r0.x ? r2.w : 0;
    r2.y = cmp(r2.z >= r2.y);
    r0.y = r0.y ? r2.y : 0;
    r0.x = (int)r0.x | (int)r0.y;
    r0.x = (int)r0.w | (int)r0.x;
    r0.y = 1 / r2.x;
    r0.w = -r2.z + r2.x;
    r2.x = r0.y * r0.w + -0.5;
    r0.w = -1 + r0.w;
    r0.y = r0.y * r0.w + -0.5;
    r0.y = abs(r0.y) + abs(r2.x);
    r0.y = 0.5 * r0.y;
    r2.xyz = r0.yyy * r3.xyz + r1.xyz;
    r1.xyz = r0.xxx ? r2.xyz : r1.xyz;
    o0.xyzw = r0.zzzz ? r1.xyzw : r4.xyzw;
  } else {
    o0.xyzw = r1.xyzw;
  }
}