#include "../Includes/Common.hlsl"

cbuffer cb0 : register(b0)
{
#if 1
  uint4 cb0_m : packoffset(c0);
#else
  int2 g_i2InputSize : packoffset(c0);
  int2 g_i2OutputSize : packoffset(c0.z);
#endif
}

Texture2D<float4> t0 : register(t0); // g_txInput
RWTexture2D<float4> u0 : register(u0); // g_uavOutput

groupshared float4 g0[2][144];

uint spvBitfieldInsert(uint Base, uint Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint2 spvBitfieldInsert(uint2 Base, uint2 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint3 spvBitfieldInsert(uint3 Base, uint3 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

uint4 spvBitfieldInsert(uint4 Base, uint4 Insert, uint Offset, uint Count)
{
    uint Mask = Count == 32 ? 0xffffffff : (((1u << Count) - 1) << (Offset & 31));
    return (Base & ~Mask) | ((Insert << Offset) & Mask);
}

int spvBitfieldSExtract(int Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int2 spvBitfieldSExtract(int2 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int2 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int3 spvBitfieldSExtract(int3 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int3 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

int4 spvBitfieldSExtract(int4 Base, int Offset, int Count)
{
    int Mask = Count == 32 ? -1 : ((1 << Count) - 1);
    int4 Masked = (Base >> Offset) & Mask;
    int ExtendShift = (32 - Count) & 31;
    return (Masked << ExtendShift) >> ExtendShift;
}

[numthreads(32, 2, 1)]
void main(uint3 vThreadGroupID : SV_GroupID, uint3 vThreadIDInGroup : SV_GroupThreadID)
{
    uint3 gl_WorkGroupID = vThreadGroupID;
    uint3 gl_LocalInvocationID = vThreadIDInGroup;

    uint _80 = gl_LocalInvocationID.x << 2u;
    uint _86 = gl_WorkGroupID.y << 7u;
    uint _87 = _80 + _86;
    uint _88 = _87 - 8u;
    uint _91 = (gl_WorkGroupID.x << 1u) + gl_LocalInvocationID.y;
    uint _96 = cb0_m.w - 1u;
    int _98 = int(_96);
    float4 _104 = t0.Load(int3(uint2(_91, uint(clamp(int(_88), 0, _98))), 0u));
    float _109 = _104.w;
    uint _113 = _80 << 2u;
    uint _128 = _113 >> 2u;
    // Note: the original shader packaged RGBA from a UNORM8 into a uint32,
    // however we can't do that with HDR colors, so we turned it into 4 floats.
    g0[gl_LocalInvocationID.y][_128].x = _104.x * _109;
    g0[gl_LocalInvocationID.y][_128].y = _104.y * _109;
    g0[gl_LocalInvocationID.y][_128].z = _104.z * _109;
    g0[gl_LocalInvocationID.y][_128].w = _109;
    float4 _137 = t0.Load(int3(uint2(_91, uint(clamp(int(spvBitfieldInsert(_88, 1u, 0u, 2u)), 0, _98))), 0u));
    float _141 = _137.w;
    uint _160 = spvBitfieldInsert(_113, 1u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_160].x = _137.x * _141;
    g0[gl_LocalInvocationID.y][_160].y = _137.y * _141;
    g0[gl_LocalInvocationID.y][_160].z = _137.z * _141;
    g0[gl_LocalInvocationID.y][_160].w = _141;
    float4 _168 = t0.Load(int3(uint2(_91, uint(clamp(int(spvBitfieldInsert(_88, 2u, 0u, 2u)), 0, _98))), 0u));
    float _172 = _168.w;
    uint _191 = spvBitfieldInsert(_113, 2u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_191].x = _168.x * _172;
    g0[gl_LocalInvocationID.y][_191].y = _168.y * _172;
    g0[gl_LocalInvocationID.y][_191].z = _168.z * _172;
    g0[gl_LocalInvocationID.y][_191].w = _172;
    float4 _199 = t0.Load(int3(uint2(_91, uint(clamp(int(spvBitfieldInsert(_88, 3u, 0u, 2u)), 0, _98))), 0u));
    float _203 = _199.w;
    uint _222 = spvBitfieldInsert(_113, 3u, 2u, 2u) >> 2u;
    g0[gl_LocalInvocationID.y][_222].x = _199.x * _203;
    g0[gl_LocalInvocationID.y][_222].y = _199.y * _203;
    g0[gl_LocalInvocationID.y][_222].z = _199.z * _203;
    g0[gl_LocalInvocationID.y][_222].w = _203;
    if (gl_LocalInvocationID.x < 16u)
    {
        float4 _232 = t0.Load(int3(uint2(_91, clamp((gl_LocalInvocationID.x + _86) + 120u, 0u, _96)), 0u));
        float _236 = _232.w;
        uint _255 = (_80 + 512u) >> 2u;
        g0[gl_LocalInvocationID.y][_255].x = _232.x * _236;
        g0[gl_LocalInvocationID.y][_255].y = _232.y * _236;
        g0[gl_LocalInvocationID.y][_255].z = _232.z * _236;
        g0[gl_LocalInvocationID.y][_255].w = _236;
    }
    GroupMemoryBarrierWithGroupSync();
    if (int(_87) < int(cb0_m.w))
    {
        uint2 _264 = uint2(_91, _87);
        float4 _265 = t0.Load(int3(_264, 0u));
        float _266 = _265.x;
        float _267 = _265.y;
        float _268 = _265.z;
        float _269 = _265.w;
        uint2 _271 = uint2(_91, _87 + 1u);
        float4 _272 = t0.Load(int3(_271, 0u));
        float _273 = _272.x;
        float _274 = _272.y;
        float _275 = _272.z;
        float _276 = _272.w;
        uint2 _279 = uint2(_91, _87 + 2u);
        float4 _280 = t0.Load(int3(_279, 0u));
        float _281 = _280.x;
        float _282 = _280.y;
        float _283 = _280.z;
        float _284 = _280.w;
        uint2 _287 = uint2(_91, _87 + 3u);
        float4 _288 = t0.Load(int3(_287, 0u));
        float _289 = _288.x;
        float _290 = _288.y;
        float _291 = _288.z;
        float _292 = _288.w;
        if ((((_269 + _276) + _284) + _292) != 0.0f)
        {
            float _311 = float(g0[gl_LocalInvocationID.y][_160].r);
            float _314 = float(g0[gl_LocalInvocationID.y][_160].g);
            float _315 = float(g0[gl_LocalInvocationID.y][_160].b);
            float _317 = float(g0[gl_LocalInvocationID.y][_160].a);
            float _321 = float(g0[gl_LocalInvocationID.y][_191].r);
            float _324 = float(g0[gl_LocalInvocationID.y][_191].g);
            float _325 = float(g0[gl_LocalInvocationID.y][_191].b);
            float _327 = float(g0[gl_LocalInvocationID.y][_191].a);
            float _331 = float(g0[gl_LocalInvocationID.y][_222].r);
            float _334 = float(g0[gl_LocalInvocationID.y][_222].g);
            float _335 = float(g0[gl_LocalInvocationID.y][_222].b);
            float _337 = float(g0[gl_LocalInvocationID.y][_222].a);
            uint _338 = _113 + 16u;
            uint _342 = _338 >> 2u;
            float _347 = float(g0[gl_LocalInvocationID.y][_342].r);
            float _350 = float(g0[gl_LocalInvocationID.y][_342].g);
            float _351 = float(g0[gl_LocalInvocationID.y][_342].b);
            float _353 = float(g0[gl_LocalInvocationID.y][_342].a);
            uint _403 = spvBitfieldInsert(_338, 1u, 2u, 2u) >> 2u;
            float _408 = float(g0[gl_LocalInvocationID.y][_403].r);
            float _411 = float(g0[gl_LocalInvocationID.y][_403].g);
            float _412 = float(g0[gl_LocalInvocationID.y][_403].b);
            float _414 = float(g0[gl_LocalInvocationID.y][_403].a);
            uint _432 = spvBitfieldInsert(_338, 2u, 2u, 2u) >> 2u;
            float _437 = float(g0[gl_LocalInvocationID.y][_432].r);
            float _440 = float(g0[gl_LocalInvocationID.y][_432].g);
            float _441 = float(g0[gl_LocalInvocationID.y][_432].b);
            float _443 = float(g0[gl_LocalInvocationID.y][_432].a);
            uint _461 = spvBitfieldInsert(_338, 3u, 2u, 2u) >> 2u;
            float _466 = float(g0[gl_LocalInvocationID.y][_461].r);
            float _469 = float(g0[gl_LocalInvocationID.y][_461].g);
            float _470 = float(g0[gl_LocalInvocationID.y][_461].b);
            float _472 = float(g0[gl_LocalInvocationID.y][_461].a);
            uint _489 = (_113 + 32u) >> 2u;
            float _494 = float(g0[gl_LocalInvocationID.y][_489].r);
            float _497 = float(g0[gl_LocalInvocationID.y][_489].g);
            float _498 = float(g0[gl_LocalInvocationID.y][_489].b);
            float _500 = float(g0[gl_LocalInvocationID.y][_489].a);
            uint _517 = (_113 + 36u) >> 2u;
            float _522 = float(g0[gl_LocalInvocationID.y][_517].r);
            float _525 = float(g0[gl_LocalInvocationID.y][_517].g);
            float _526 = float(g0[gl_LocalInvocationID.y][_517].b);
            float _528 = float(g0[gl_LocalInvocationID.y][_517].a);
            uint _545 = (_113 + 40u) >> 2u;
            float _550 = float(g0[gl_LocalInvocationID.y][_545].r);
            float _553 = float(g0[gl_LocalInvocationID.y][_545].g);
            float _554 = float(g0[gl_LocalInvocationID.y][_545].b);
            float _556 = float(g0[gl_LocalInvocationID.y][_545].a);
            uint _577 = (_113 + 44u) >> 2u;
            float _582 = float(g0[gl_LocalInvocationID.y][_577].r);
            float _585 = float(g0[gl_LocalInvocationID.y][_577].g);
            float _586 = float(g0[gl_LocalInvocationID.y][_577].b);
            float _588 = float(g0[gl_LocalInvocationID.y][_577].a);
            uint _605 = (_113 + 48u) >> 2u;
            float _610 = float(g0[gl_LocalInvocationID.y][_605].r);
            float _613 = float(g0[gl_LocalInvocationID.y][_605].g);
            float _614 = float(g0[gl_LocalInvocationID.y][_605].b);
            float _616 = float(g0[gl_LocalInvocationID.y][_605].a);
            uint _633 = (_113 + 52u) >> 2u;
            float _638 = float(g0[gl_LocalInvocationID.y][_633].r);
            float _641 = float(g0[gl_LocalInvocationID.y][_633].g);
            float _642 = float(g0[gl_LocalInvocationID.y][_633].b);
            float _644 = float(g0[gl_LocalInvocationID.y][_633].a);
            uint _661 = (_113 + 56u) >> 2u;
            float _666 = float(g0[gl_LocalInvocationID.y][_661].r);
            float _669 = float(g0[gl_LocalInvocationID.y][_661].g);
            float _670 = float(g0[gl_LocalInvocationID.y][_661].b);
            float _672 = float(g0[gl_LocalInvocationID.y][_661].a);
            uint _693 = (_113 + 60u) >> 2u;
            float _698 = float(g0[gl_LocalInvocationID.y][_693].r);
            float _701 = float(g0[gl_LocalInvocationID.y][_693].g);
            float _702 = float(g0[gl_LocalInvocationID.y][_693].b);
            float _704 = float(g0[gl_LocalInvocationID.y][_693].a);
            uint _721 = (_113 + 64u) >> 2u;
            float _726 = float(g0[gl_LocalInvocationID.y][_721].r);
            float _729 = float(g0[gl_LocalInvocationID.y][_721].g);
            float _730 = float(g0[gl_LocalInvocationID.y][_721].b);
            float _732 = float(g0[gl_LocalInvocationID.y][_721].a);
            uint _749 = (_113 + 68u) >> 2u;
            float _754 = float(g0[gl_LocalInvocationID.y][_749].r);
            float _757 = float(g0[gl_LocalInvocationID.y][_749].g);
            float _758 = float(g0[gl_LocalInvocationID.y][_749].b);
            float _760 = float(g0[gl_LocalInvocationID.y][_749].a);
            uint _777 = (_113 + 72u) >> 2u;
            float _782 = float(g0[gl_LocalInvocationID.y][_777].r);
            float _785 = float(g0[gl_LocalInvocationID.y][_777].g);
            float _786 = float(g0[gl_LocalInvocationID.y][_777].b);
            float _788 = float(g0[gl_LocalInvocationID.y][_777].a);
            uint _806 = (_113 + 76u) >> 2u;
            float _834 = mad(_732, 5.2932344260625541210174560546875e-05f, mad(_704, 8.4585641161538660526275634765625e-05f, mad(_672, 0.0001269780914299190044403076171875f, mad(_644, 0.00017906780703924596309661865234375f, mad(_616, 0.00023722629703115671873092651367188f, mad(_588, 0.00029523289413191378116607666015625f, mad(_556, 0.000345162232406437397003173828125f, mad(_528, 0.00037908655940555036067962646484375f, mad(_500, 0.00039112006197683513164520263671875f, mad(_472, 0.00037908655940555036067962646484375f, mad(_443, 0.000345162232406437397003173828125f, mad(_414, 0.00029523289413191378116607666015625f, mad(_353, 0.00023722629703115671873092651367188f, mad(_337, 0.00017906780703924596309661865234375f, mad(_327, 0.0001269780914299190044403076171875f, (_317 * 8.4585641161538660526275634765625e-05f) + (float(g0[gl_LocalInvocationID.y][_128].a) * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _838 = mad(_760, 5.2932344260625541210174560546875e-05f, mad(_732, 8.4585641161538660526275634765625e-05f, mad(_704, 0.0001269780914299190044403076171875f, mad(_672, 0.00017906780703924596309661865234375f, mad(_644, 0.00023722629703115671873092651367188f, mad(_616, 0.00029523289413191378116607666015625f, mad(_588, 0.000345162232406437397003173828125f, mad(_556, 0.00037908655940555036067962646484375f, mad(_528, 0.00039112006197683513164520263671875f, mad(_500, 0.00037908655940555036067962646484375f, mad(_472, 0.000345162232406437397003173828125f, mad(_443, 0.00029523289413191378116607666015625f, mad(_414, 0.00023722629703115671873092651367188f, mad(_353, 0.00017906780703924596309661865234375f, mad(_337, 0.0001269780914299190044403076171875f, (_327 * 8.4585641161538660526275634765625e-05f) + (_317 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _842 = mad(_788, 5.2932344260625541210174560546875e-05f, mad(_760, 8.4585641161538660526275634765625e-05f, mad(_732, 0.0001269780914299190044403076171875f, mad(_704, 0.00017906780703924596309661865234375f, mad(_672, 0.00023722629703115671873092651367188f, mad(_644, 0.00029523289413191378116607666015625f, mad(_616, 0.000345162232406437397003173828125f, mad(_588, 0.00037908655940555036067962646484375f, mad(_556, 0.00039112006197683513164520263671875f, mad(_528, 0.00037908655940555036067962646484375f, mad(_500, 0.000345162232406437397003173828125f, mad(_472, 0.00029523289413191378116607666015625f, mad(_443, 0.00023722629703115671873092651367188f, mad(_414, 0.00017906780703924596309661865234375f, mad(_353, 0.0001269780914299190044403076171875f, (_337 * 8.4585641161538660526275634765625e-05f) + (_327 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            float _846 = mad(float(g0[gl_LocalInvocationID.y][_806].a), 5.2932344260625541210174560546875e-05f, mad(_788, 8.4585641161538660526275634765625e-05f, mad(_760, 0.0001269780914299190044403076171875f, mad(_732, 0.00017906780703924596309661865234375f, mad(_704, 0.00023722629703115671873092651367188f, mad(_672, 0.00029523289413191378116607666015625f, mad(_644, 0.000345162232406437397003173828125f, mad(_616, 0.00037908655940555036067962646484375f, mad(_588, 0.00039112006197683513164520263671875f, mad(_556, 0.00037908655940555036067962646484375f, mad(_528, 0.000345162232406437397003173828125f, mad(_500, 0.00029523289413191378116607666015625f, mad(_472, 0.00023722629703115671873092651367188f, mad(_443, 0.00017906780703924596309661865234375f, mad(_414, 0.0001269780914299190044403076171875f, (_353 * 8.4585641161538660526275634765625e-05f) + (_337 * 5.2932344260625541210174560546875e-05f)))))))))))))))) + 1.0000000116860974230803549289703e-07f;
            u0[_264] = float4(mad(_269, (mad(_726, 5.2932344260625541210174560546875e-05f, mad(_698, 8.4585641161538660526275634765625e-05f, mad(_666, 0.0001269780914299190044403076171875f, mad(_638, 0.00017906780703924596309661865234375f, mad(_610, 0.00023722629703115671873092651367188f, mad(_582, 0.00029523289413191378116607666015625f, mad(_550, 0.000345162232406437397003173828125f, mad(_522, 0.00037908655940555036067962646484375f, mad(_494, 0.00039112006197683513164520263671875f, mad(_466, 0.00037908655940555036067962646484375f, mad(_437, 0.000345162232406437397003173828125f, mad(_408, 0.00029523289413191378116607666015625f, mad(_347, 0.00023722629703115671873092651367188f, mad(_331, 0.00017906780703924596309661865234375f, mad(_321, 0.0001269780914299190044403076171875f, (_311 * 8.4585641161538660526275634765625e-05f) + (float(g0[gl_LocalInvocationID.y][_128].r) * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _834) - _266, _266), mad(_269, (mad(_729, 5.2932344260625541210174560546875e-05f, mad(_701, 8.4585641161538660526275634765625e-05f, mad(_669, 0.0001269780914299190044403076171875f, mad(_641, 0.00017906780703924596309661865234375f, mad(_613, 0.00023722629703115671873092651367188f, mad(_585, 0.00029523289413191378116607666015625f, mad(_553, 0.000345162232406437397003173828125f, mad(_525, 0.00037908655940555036067962646484375f, mad(_497, 0.00039112006197683513164520263671875f, mad(_469, 0.00037908655940555036067962646484375f, mad(_440, 0.000345162232406437397003173828125f, mad(_411, 0.00029523289413191378116607666015625f, mad(_350, 0.00023722629703115671873092651367188f, mad(_334, 0.00017906780703924596309661865234375f, mad(_324, 0.0001269780914299190044403076171875f, (float(g0[gl_LocalInvocationID.y][_128].g) * 5.2932344260625541210174560546875e-05f) + (_314 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _834) - _267, _267), mad(_269, (mad(_730, 5.2932344260625541210174560546875e-05f, mad(_702, 8.4585641161538660526275634765625e-05f, mad(_670, 0.0001269780914299190044403076171875f, mad(_642, 0.00017906780703924596309661865234375f, mad(_614, 0.00023722629703115671873092651367188f, mad(_586, 0.00029523289413191378116607666015625f, mad(_554, 0.000345162232406437397003173828125f, mad(_526, 0.00037908655940555036067962646484375f, mad(_498, 0.00039112006197683513164520263671875f, mad(_470, 0.00037908655940555036067962646484375f, mad(_441, 0.000345162232406437397003173828125f, mad(_412, 0.00029523289413191378116607666015625f, mad(_351, 0.00023722629703115671873092651367188f, mad(_335, 0.00017906780703924596309661865234375f, mad(_325, 0.0001269780914299190044403076171875f, (float(g0[gl_LocalInvocationID.y][_128].b) * 5.2932344260625541210174560546875e-05f) + (_315 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _834) - _268, _268), _269);
            u0[_271] = float4(mad(_276, (mad(_754, 5.2932344260625541210174560546875e-05f, mad(_726, 8.4585641161538660526275634765625e-05f, mad(_698, 0.0001269780914299190044403076171875f, mad(_666, 0.00017906780703924596309661865234375f, mad(_638, 0.00023722629703115671873092651367188f, mad(_610, 0.00029523289413191378116607666015625f, mad(_582, 0.000345162232406437397003173828125f, mad(_550, 0.00037908655940555036067962646484375f, mad(_522, 0.00039112006197683513164520263671875f, mad(_494, 0.00037908655940555036067962646484375f, mad(_466, 0.000345162232406437397003173828125f, mad(_437, 0.00029523289413191378116607666015625f, mad(_408, 0.00023722629703115671873092651367188f, mad(_347, 0.00017906780703924596309661865234375f, mad(_331, 0.0001269780914299190044403076171875f, (_321 * 8.4585641161538660526275634765625e-05f) + (_311 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _838) - _273, _273), mad(_276, (mad(_757, 5.2932344260625541210174560546875e-05f, mad(_729, 8.4585641161538660526275634765625e-05f, mad(_701, 0.0001269780914299190044403076171875f, mad(_669, 0.00017906780703924596309661865234375f, mad(_641, 0.00023722629703115671873092651367188f, mad(_613, 0.00029523289413191378116607666015625f, mad(_585, 0.000345162232406437397003173828125f, mad(_553, 0.00037908655940555036067962646484375f, mad(_525, 0.00039112006197683513164520263671875f, mad(_497, 0.00037908655940555036067962646484375f, mad(_469, 0.000345162232406437397003173828125f, mad(_440, 0.00029523289413191378116607666015625f, mad(_411, 0.00023722629703115671873092651367188f, mad(_350, 0.00017906780703924596309661865234375f, mad(_334, 0.0001269780914299190044403076171875f, (_314 * 5.2932344260625541210174560546875e-05f) + (_324 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _838) - _274, _274), mad(_276, (mad(_758, 5.2932344260625541210174560546875e-05f, mad(_730, 8.4585641161538660526275634765625e-05f, mad(_702, 0.0001269780914299190044403076171875f, mad(_670, 0.00017906780703924596309661865234375f, mad(_642, 0.00023722629703115671873092651367188f, mad(_614, 0.00029523289413191378116607666015625f, mad(_586, 0.000345162232406437397003173828125f, mad(_554, 0.00037908655940555036067962646484375f, mad(_526, 0.00039112006197683513164520263671875f, mad(_498, 0.00037908655940555036067962646484375f, mad(_470, 0.000345162232406437397003173828125f, mad(_441, 0.00029523289413191378116607666015625f, mad(_412, 0.00023722629703115671873092651367188f, mad(_351, 0.00017906780703924596309661865234375f, mad(_335, 0.0001269780914299190044403076171875f, (_315 * 5.2932344260625541210174560546875e-05f) + (_325 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _838) - _275, _275), _276);
            u0[_279] = float4(mad(_284, (mad(_782, 5.2932344260625541210174560546875e-05f, mad(_754, 8.4585641161538660526275634765625e-05f, mad(_726, 0.0001269780914299190044403076171875f, mad(_698, 0.00017906780703924596309661865234375f, mad(_666, 0.00023722629703115671873092651367188f, mad(_638, 0.00029523289413191378116607666015625f, mad(_610, 0.000345162232406437397003173828125f, mad(_582, 0.00037908655940555036067962646484375f, mad(_550, 0.00039112006197683513164520263671875f, mad(_522, 0.00037908655940555036067962646484375f, mad(_494, 0.000345162232406437397003173828125f, mad(_466, 0.00029523289413191378116607666015625f, mad(_437, 0.00023722629703115671873092651367188f, mad(_408, 0.00017906780703924596309661865234375f, mad(_347, 0.0001269780914299190044403076171875f, (_331 * 8.4585641161538660526275634765625e-05f) + (_321 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _842) - _281, _281), mad(_284, (mad(_785, 5.2932344260625541210174560546875e-05f, mad(_757, 8.4585641161538660526275634765625e-05f, mad(_729, 0.0001269780914299190044403076171875f, mad(_701, 0.00017906780703924596309661865234375f, mad(_669, 0.00023722629703115671873092651367188f, mad(_641, 0.00029523289413191378116607666015625f, mad(_613, 0.000345162232406437397003173828125f, mad(_585, 0.00037908655940555036067962646484375f, mad(_553, 0.00039112006197683513164520263671875f, mad(_525, 0.00037908655940555036067962646484375f, mad(_497, 0.000345162232406437397003173828125f, mad(_469, 0.00029523289413191378116607666015625f, mad(_440, 0.00023722629703115671873092651367188f, mad(_411, 0.00017906780703924596309661865234375f, mad(_350, 0.0001269780914299190044403076171875f, (_324 * 5.2932344260625541210174560546875e-05f) + (_334 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _842) - _282, _282), mad(_284, (mad(_786, 5.2932344260625541210174560546875e-05f, mad(_758, 8.4585641161538660526275634765625e-05f, mad(_730, 0.0001269780914299190044403076171875f, mad(_702, 0.00017906780703924596309661865234375f, mad(_670, 0.00023722629703115671873092651367188f, mad(_642, 0.00029523289413191378116607666015625f, mad(_614, 0.000345162232406437397003173828125f, mad(_586, 0.00037908655940555036067962646484375f, mad(_554, 0.00039112006197683513164520263671875f, mad(_526, 0.00037908655940555036067962646484375f, mad(_498, 0.000345162232406437397003173828125f, mad(_470, 0.00029523289413191378116607666015625f, mad(_441, 0.00023722629703115671873092651367188f, mad(_412, 0.00017906780703924596309661865234375f, mad(_351, 0.0001269780914299190044403076171875f, (_325 * 5.2932344260625541210174560546875e-05f) + (_335 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _842) - _283, _283), _284);
            u0[_287] = float4(mad(_292, (mad(float(g0[gl_LocalInvocationID.y][_806].r), 5.2932344260625541210174560546875e-05f, mad(_782, 8.4585641161538660526275634765625e-05f, mad(_754, 0.0001269780914299190044403076171875f, mad(_726, 0.00017906780703924596309661865234375f, mad(_698, 0.00023722629703115671873092651367188f, mad(_666, 0.00029523289413191378116607666015625f, mad(_638, 0.000345162232406437397003173828125f, mad(_610, 0.00037908655940555036067962646484375f, mad(_582, 0.00039112006197683513164520263671875f, mad(_550, 0.00037908655940555036067962646484375f, mad(_522, 0.000345162232406437397003173828125f, mad(_494, 0.00029523289413191378116607666015625f, mad(_466, 0.00023722629703115671873092651367188f, mad(_437, 0.00017906780703924596309661865234375f, mad(_408, 0.0001269780914299190044403076171875f, (_347 * 8.4585641161538660526275634765625e-05f) + (_331 * 5.2932344260625541210174560546875e-05f)))))))))))))))) / _846) - _289, _289), mad(_292, (mad(float(g0[gl_LocalInvocationID.y][_806].g), 5.2932344260625541210174560546875e-05f, mad(_785, 8.4585641161538660526275634765625e-05f, mad(_757, 0.0001269780914299190044403076171875f, mad(_729, 0.00017906780703924596309661865234375f, mad(_701, 0.00023722629703115671873092651367188f, mad(_669, 0.00029523289413191378116607666015625f, mad(_641, 0.000345162232406437397003173828125f, mad(_613, 0.00037908655940555036067962646484375f, mad(_585, 0.00039112006197683513164520263671875f, mad(_553, 0.00037908655940555036067962646484375f, mad(_525, 0.000345162232406437397003173828125f, mad(_497, 0.00029523289413191378116607666015625f, mad(_469, 0.00023722629703115671873092651367188f, mad(_440, 0.00017906780703924596309661865234375f, mad(_411, 0.0001269780914299190044403076171875f, (_334 * 5.2932344260625541210174560546875e-05f) + (_350 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _846) - _290, _290), mad(_292, (mad(float(g0[gl_LocalInvocationID.y][_806].b), 5.2932344260625541210174560546875e-05f, mad(_786, 8.4585641161538660526275634765625e-05f, mad(_758, 0.0001269780914299190044403076171875f, mad(_730, 0.00017906780703924596309661865234375f, mad(_702, 0.00023722629703115671873092651367188f, mad(_670, 0.00029523289413191378116607666015625f, mad(_642, 0.000345162232406437397003173828125f, mad(_614, 0.00037908655940555036067962646484375f, mad(_586, 0.00039112006197683513164520263671875f, mad(_554, 0.00037908655940555036067962646484375f, mad(_526, 0.000345162232406437397003173828125f, mad(_498, 0.00029523289413191378116607666015625f, mad(_470, 0.00023722629703115671873092651367188f, mad(_441, 0.00017906780703924596309661865234375f, mad(_412, 0.0001269780914299190044403076171875f, (_335 * 5.2932344260625541210174560546875e-05f) + (_351 * 8.4585641161538660526275634765625e-05f)))))))))))))))) / _846) - _291, _291), _292);
        }
        else
        {
            u0[_264] = _265;
            u0[_271] = _272;
            u0[_279] = _280;
            u0[_287] = _288;
        }
    }
}