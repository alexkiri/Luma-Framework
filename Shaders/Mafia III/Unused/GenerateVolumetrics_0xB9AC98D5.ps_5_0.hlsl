Texture2D<float4> t5 : register(t5);
Texture2D<float4> t4 : register(t4);
Texture2D<float4> t3 : register(t3);
Texture2D<float4> t2 : register(t2); // Noise map (horizontal stripes)
Texture2D<float4> t1 : register(t1);
Texture2D<float4> t0 : register(t0);

SamplerState s1_s : register(s1);
SamplerState s0_s : register(s0);

cbuffer cb1 : register(b1)
{
  float4 cb1[45];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[13];
}

#define cmp

// TODO: mafia has a weird vertical strips effect on volumetric textures, and it seems to be sources by the 3rd SRV here, however there's a few other shaders
// that access the same texture, and they also seem to be related to volumetrics, and thus would also need modifications to fix the stripes.
// Note that clouds etc are only drawn every x frames offline.
static float noiseIntensity = 1.0;

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float4 v3 : TEXCOORD2,
  float4 v4 : TEXCOORD3,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16;
  r0.x = v3.w * v3.x;
  r0.y = v4.x;
  r1.xyzw = t0.Sample(s0_s, r0.xy).xyzw;
  r0.z = r1.w * r1.w;
  r0.z = r0.z * r0.z;
  r0.x = t1.Sample(s0_s, r0.xy).x;
  r0.xyw = cb1[44].xyz * r0.xxx;
  r1.w = 1 / cb1[4].y;
  r2.x = cb1[4].y + v1.z;
  r2.x = -1 + r2.x;
  uint4 r2u;
  r2u.y = (uint)v2.w;
  r2u.z = r2u.y + 4;
  r3.xyz = cb1[39].yyy * r1.xyz;
  r2.w = (float)r2u.y;
  r2.w = v1.z + r2.w;
  r2.xw = r2.xw * r1.ww;
  r3.w = max(cb1[17].w, 9.99999975e-006);
  r0.z = -r0.z * 0.5 + 1;
  r0.z = log2(r0.z);
  r4.y = v1.w;
  r5.xyz = float3(1,1,1);
  r6.xyz = float3(0,0,0);
  r4.z = v3.z;
  r4.w = 0;
  r4.x = r2.w;
  uint4 r5u;
  r5u.w = r2u.y;
  while (true) {
    r6.w = cmp(r5u.w >= r2u.z);
    if (r6.w != 0) break;
    r7.xyz = t3.SampleLevel(s1_s, r4.xy, 0).xyz;
    r6.w = t5.SampleLevel(s1_s, r4.xy, 0).x;
    r5u.w++;
    r7.w = (float)r5u.w;
    r7.w = r7.w * r1.w;
    r7.w = r7.w * r7.w;
    r7.w = cb1[4].x * r7.w;
    r7.w = min(v3.y, r7.w);
    r8.x = dot(r7.xyz, float3(0.212500006,0.715399981,0.0720999986));
    r8.x = 9.99999975e-006 + r8.x;
    r6.w = r6.w * r6.w + 0.100000001;
    r7.xyz = r6.www * r7.xyz;
    r6.w = saturate(r8.x / r3.w);
    r4.w = r6.w + r4.w;
    r6.w = r7.w + -r4.z;
    r6.w = r6.w * r0.z;
    r6.w = exp2(r6.w);
    r7.xyz = r7.xyz * r3.xyz;
    r7.xyz = r1.xyz * r0.xyw + r7.xyz;
    r8.x = 1 + -r6.w;
    r7.xyz = r8.xxx * r7.xyz;
    r6.xyz = r7.xyz * r5.xyz + r6.xyz;
    r5.xyz = r6.www * r5.xyz;
    r6.w = r4.x + r1.w;
    r4.x = min(r6.w, r2.x);
    r4.z = r7.w;
  }
  r0.x = cmp(20 < v3.y);
  if (r0.x != 0) {
    r0.xyz = cb0[1].www * v2.xyz;
    r0.w = cb1[18].w * cb1[15].y;
    r1.x = 0.25 * r4.w;
    r1.yzw = cb0[12].xyz + cb0[0].xyz;
    r2.x = saturate(v3.y * 0.00999999978 + -0.00999999978);
    r2.y = 0.200000003 * r2.x;
    r2.x = -r2.x * 0.200000003 + 1;
    r1.x = r1.x * r2.x + r2.y;
    r2.xy = cb1[38].zz * v3.zy;
    r2.xy = min(float2(150000,150000), r2.xy);
    r3.xyz = r0.xyz * r2.xxx + r1.yzw;
    r2.xyz = r0.xzy * r2.yyy + r1.ywz;
    r0.x = r2.y + -r3.z;
    r0.x = abs(r0.x) + r3.z;
    r2.w = 10 + r0.x;
    r1.yzw = r2.xwz + -r3.xzy;
    r0.y = dot(r1.yzw, r1.yzw);
    r4.x = sqrt(r0.y);
    r3.w = 6360000 + r3.z;
    r0.y = dot(r3.xyw, r3.xyw);
    r4.y = sqrt(r0.y);
    r1.yzw = r1.yzw / r4.xxx;
    r0.z = dot(r3.xwy, r1.yzw);
    r4.z = r0.z / r4.y;
    r0.y = r0.z * r0.z + -r0.y;
    r0.y = 4.1216402e+013 + r0.y;
    r0.y = sqrt(r0.y);
    r0.y = -r0.z + -r0.y;
    r0.y = max(0, r0.y);
    r3.z = cmp(0 < r0.y);
    r4.w = cmp(r0.y < r4.x);
    r3.z = r3.z ? r4.w : 0;
    r0.z = r0.z + r0.y;
    r7.z = 1.55763246e-007 * r0.z;
    r7.x = r4.x + -r0.y;
    r7.y = 6420000;
    r4.xyz = r3.zzz ? r7.xyz : r4.xyz;
    r0.z = cmp(6420000 >= r4.y);
    if (r0.z != 0) {
      r2.y = 6360010 + r0.x;
      r0.xyz = r0.yyy * r1.yzw + r3.xwy;
      r0.xyz = r3.zzz ? r0.xyz : r3.xwy;
      r3.x = dot(r1.ywz, cb1[16].xyz);
      r0.x = dot(r0.xzy, cb1[16].xyz);
      r0.x = r0.x / r4.y;
      r0.y = cmp(r4.y < 6360600);
      r0.z = 6360600 / r4.y;
      r7.xyz = r2.xyz * r0.zzz;
      r7.w = 6360600;
      r2.w = r4.y;
      r2.xyzw = r0.yyyy ? r7.xyzw : r2.xyzw;
      r0.y = dot(r2.xyz, r2.xyz);
      r0.z = sqrt(r0.y);
      r1.y = dot(r2.xyz, r1.yzw);
      r1.w = dot(r2.xzy, cb1[16].xyz);
      r1.zw = r1.yw / r0.zz;
      r2.x = cmp(0 < r4.z);
      if (r2.x != 0) {
        r2.x = -6360000 + r2.w;
        r2.x = 1.66666669e-005 * r2.x;
        r2.y = sqrt(r2.x);
        r2.z = 0.150000006 + r4.z;
        r2.z = 12.262105 * r2.z;
        r3.y = min(1, abs(r2.z));
        r3.z = max(1, abs(r2.z));
        r3.z = 1 / r3.z;
        r3.y = r3.y * r3.z;
        r3.z = r3.y * r3.y;
        r3.w = r3.z * 0.0208350997 + -0.0851330012;
        r3.w = r3.z * r3.w + 0.180141002;
        r3.w = r3.z * r3.w + -0.330299497;
        r3.z = r3.z * r3.w + 0.999866009;
        r3.w = r3.y * r3.z;
        r4.y = cmp(1 < abs(r2.z));
        r3.w = r3.w * -2 + 1.57079637;
        r3.w = r4.y ? r3.w : 0;
        r3.y = r3.y * r3.z + r3.w;
        r2.z = min(1, r2.z);
        r2.z = cmp(r2.z < -r2.z);
        r2.z = r2.z ? -r3.y : r3.y;
        r2.x = 0.666666687 * r2.z;
        r2.xyz = t4.SampleLevel(s1_s, r2.xy, 0).xyz;
        r3.y = -6360000 + r0.z;
        r3.y = 1.66666669e-005 * r3.y;
        r7.y = sqrt(r3.y);
        r3.y = 0.150000006 + r1.z;
        r3.y = 12.262105 * r3.y;
        r3.z = min(1, abs(r3.y));
        r3.w = max(1, abs(r3.y));
        r3.w = 1 / r3.w;
        r3.z = r3.z * r3.w;
        r3.w = r3.z * r3.z;
        r4.y = r3.w * 0.0208350997 + -0.0851330012;
        r4.y = r3.w * r4.y + 0.180141002;
        r4.y = r3.w * r4.y + -0.330299497;
        r3.w = r3.w * r4.y + 0.999866009;
        r4.y = r3.z * r3.w;
        r4.w = cmp(1 < abs(r3.y));
        r4.y = r4.y * -2 + 1.57079637;
        r4.y = r4.w ? r4.y : 0;
        r3.z = r3.z * r3.w + r4.y;
        r3.y = min(1, r3.y);
        r3.y = cmp(r3.y < -r3.y);
        r3.y = r3.y ? -r3.z : r3.z;
        r7.x = 0.666666687 * r3.y;
        r3.yzw = t4.SampleLevel(s1_s, r7.xy, 0).xyz;
        r2.xyz = r2.xyz / r3.yzw;
        r2.xyz = min(float3(1,1,1), r2.xyz);
      } else {
        r0.z = -6360000 + r0.z;
        r0.z = 1.66666669e-005 * r0.z;
        r7.y = sqrt(r0.z);
        r0.z = 0.150000006 + -r1.z;
        r0.z = 12.262105 * r0.z;
        r1.z = min(1, abs(r0.z));
        r3.y = max(1, abs(r0.z));
        r3.y = 1 / r3.y;
        r1.z = r3.y * r1.z;
        r3.y = r1.z * r1.z;
        r3.z = r3.y * 0.0208350997 + -0.0851330012;
        r3.z = r3.y * r3.z + 0.180141002;
        r3.z = r3.y * r3.z + -0.330299497;
        r3.y = r3.y * r3.z + 0.999866009;
        r3.z = r3.y * r1.z;
        r3.w = cmp(1 < abs(r0.z));
        r3.z = r3.z * -2 + 1.57079637;
        r3.z = r3.w ? r3.z : 0;
        r1.z = r1.z * r3.y + r3.z;
        r0.z = min(1, r0.z);
        r0.z = cmp(r0.z < -r0.z);
        r0.z = r0.z ? -r1.z : r1.z;
        r7.x = 0.666666687 * r0.z;
        r3.yzw = t4.SampleLevel(s1_s, r7.xy, 0).xyz;
        r0.z = -6360000 + r2.w;
        r0.z = 1.66666669e-005 * r0.z;
        r7.y = sqrt(r0.z);
        r0.z = 0.150000006 + -r4.z;
        r0.z = 12.262105 * r0.z;
        r1.z = min(1, abs(r0.z));
        r4.y = max(1, abs(r0.z));
        r4.y = 1 / r4.y;
        r1.z = r4.y * r1.z;
        r4.y = r1.z * r1.z;
        r4.w = r4.y * 0.0208350997 + -0.0851330012;
        r4.w = r4.y * r4.w + 0.180141002;
        r4.w = r4.y * r4.w + -0.330299497;
        r4.y = r4.y * r4.w + 0.999866009;
        r4.w = r4.y * r1.z;
        r5.w = cmp(1 < abs(r0.z));
        r4.w = r4.w * -2 + 1.57079637;
        r4.w = r5.w ? r4.w : 0;
        r1.z = r1.z * r4.y + r4.w;
        r0.z = min(1, r0.z);
        r0.z = cmp(r0.z < -r0.z);
        r0.z = r0.z ? -r1.z : r1.z;
        r7.x = 0.666666687 * r0.z;
        r7.xyz = t4.SampleLevel(s1_s, r7.xy, 0).xyz;
        r3.yzw = r3.yzw / r7.xyz;
        r2.xyz = min(float3(1,1,1), r3.yzw);
      }
      r0.z = 6360000 / r2.w;
      r0.z = -r0.z * r0.z + 1;
      r0.z = sqrt(r0.z);
      r1.z = r4.z + r0.z;
      r3.y = cmp(abs(r1.z) < 0.00400000019);
      if (r3.y != 0) {
        r1.z = 0.00400000019 + r1.z;
        r1.z = 124.999992 * r1.z;
        r3.yz = float2(-0.00400000019,0.00400000019) + -r0.zz;
        r0.z = r2.w * r2.w;
        r3.w = r4.x * r4.x + r0.z;
        r4.y = dot(r4.xx, r2.ww);
        r4.yw = r4.yy * r3.yz + r3.ww;
        r7.xy = r3.yz * r2.ww;
        r3.yz = r2.ww * r3.yz + r4.xx;
        r3.w = r2.w * r2.w + -4.04495993e+013;
        r3.w = sqrt(r3.w);
        r7.zw = r7.xy * r7.xy + -r0.zz;
        r7.zw = float2(4.04495993e+013,4.04495993e+013) + r7.zw;
        r8.xy = cmp(r7.xy < float2(0,0));
        r8.zw = cmp(float2(0,0) < r7.zw);
        r8.xy = r8.zw ? r8.xy : 0;
        r9.xyzw = r8.xxxx ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r0.z = r3.w * 1.10629435e-006 + 0.015625;
        r4.x = r9.y + r7.z;
        r4.xyw = sqrt(r4.xyw);
        r4.x = r7.x * r9.x + r4.x;
        r5.w = r9.z + r3.w;
        r4.x = r4.x / r5.w;
        r4.x = r4.x * 0.4921875 + r9.w;
        r5.w = max(-0.197500005, r0.x);
        r5.w = 5.34962368 * r5.w;
        r6.w = min(1, abs(r5.w));
        r7.x = max(1, abs(r5.w));
        r7.x = 1 / r7.x;
        r6.w = r7.x * r6.w;
        r7.x = r6.w * r6.w;
        r7.z = r7.x * 0.0208350997 + -0.0851330012;
        r7.z = r7.x * r7.z + 0.180141002;
        r7.z = r7.x * r7.z + -0.330299497;
        r7.x = r7.x * r7.z + 0.999866009;
        r7.z = r7.x * r6.w;
        r8.x = cmp(1 < abs(r5.w));
        r7.z = r7.z * -2 + 1.57079637;
        r7.z = r8.x ? r7.z : 0;
        r6.w = r6.w * r7.x + r7.z;
        r5.w = min(1, r5.w);
        r5.w = cmp(r5.w < -r5.w);
        r5.w = r5.w ? -r6.w : r6.w;
        r5.w = r5.w * 0.909090877 + 0.74000001;
        r5.w = r5.w * 0.484375 + 0.015625;
        r6.w = 1 + r3.x;
        r7.x = 3.5 * r6.w;
        r7.x = floor(r7.x);
        r6.w = r6.w * 3.5 + -r7.x;
        r7.z = 32 * r0.z;
        r8.x = floor(r7.z);
        r8.x = 0.03125 * r8.x;
        r0.z = r0.z * 32 + 1;
        r0.z = floor(r0.z);
        r0.z = 0.03125 * r0.z;
        r7.z = frac(r7.z);
        r5.w = r7.x + r5.w;
        r9.y = 0.125 * r5.w;
        r9.x = r4.x * 0.03125 + r8.x;
        r10.xyzw = t2.SampleLevel(s1_s, r9.yx, 0).xyzw * noiseIntensity;
        r8.z = 1 + -r6.w;
        r5.w = 1 + r5.w;
        r9.z = 0.125 * r5.w;
        r11.xyzw = t2.SampleLevel(s1_s, r9.zx, 0).xyzw * noiseIntensity;
        r11.xyzw = r11.xyzw * r6.wwww;
        r10.xyzw = r10.xyzw * r8.zzzz + r11.xyzw;
        r9.w = r4.x * 0.03125 + r0.z;
        r11.xyzw = t2.SampleLevel(s1_s, r9.yw, 0).xyzw * noiseIntensity;
        r12.xyzw = t2.SampleLevel(s1_s, r9.zw, 0).xyzw * noiseIntensity;
        r12.xyzw = r12.xyzw * r6.wwww;
        r11.xyzw = r11.xyzw * r8.zzzz + r12.xyzw;
        r4.x = 1 + -r7.z;
        r11.xyzw = r11.xyzw * r7.zzzz;
        r10.xyzw = r10.xyzw * r4.xxxx + r11.xyzw;
        r11.xy = r4.yw * r4.yw;
        r4.yw = r4.yw * r4.yw + float2(-4.04495993e+013,-4.04495993e+013);
        r4.yw = sqrt(r4.yw);
        r11.xy = r3.yz * r3.yz + -r11.xy;
        r11.xy = float2(4.04495993e+013,4.04495993e+013) + r11.xy;
        r11.zw = cmp(r3.yz < float2(0,0));
        r12.xy = cmp(float2(0,0) < r11.xy);
        r11.zw = r11.zw ? r12.xy : 0;
        r12.xyzw = r11.zzzz ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r13.xy = r4.yw * float2(1.10629435e-006,1.10629435e-006) + float2(0.015625,0.015625);
        r5.w = r12.y + r11.x;
        r5.w = sqrt(r5.w);
        r3.y = r3.y * r12.x + r5.w;
        r4.y = r12.z + r4.y;
        r3.y = r3.y / r4.y;
        r3.y = r3.y * 0.4921875 + r12.w;
        r4.y = max(-0.197500005, r1.w);
        r4.y = 5.34962368 * r4.y;
        r5.w = min(1, abs(r4.y));
        r8.w = max(1, abs(r4.y));
        r8.w = 1 / r8.w;
        r5.w = r8.w * r5.w;
        r8.w = r5.w * r5.w;
        r11.x = r8.w * 0.0208350997 + -0.0851330012;
        r11.x = r8.w * r11.x + 0.180141002;
        r11.x = r8.w * r11.x + -0.330299497;
        r8.w = r8.w * r11.x + 0.999866009;
        r11.x = r8.w * r5.w;
        r11.z = cmp(1 < abs(r4.y));
        r11.x = r11.x * -2 + 1.57079637;
        r11.x = r11.z ? r11.x : 0;
        r5.w = r5.w * r8.w + r11.x;
        r4.y = min(1, r4.y);
        r4.y = cmp(r4.y < -r4.y);
        r4.y = r4.y ? -r5.w : r5.w;
        r4.y = r4.y * 0.909090877 + 0.74000001;
        r4.y = r4.y * 0.484375 + r7.x;
        r11.xz = float2(32,32) * r13.xy;
        r12.xy = floor(r11.xz);
        r12.zw = r13.xy * float2(32,32) + float2(1,1);
        r12.zw = floor(r12.zw);
        r12.xyzw = float4(0.03125,0.03125,0.03125,0.03125) * r12.xyzw;
        r11.xz = frac(r11.xz);
        r13.xy = float2(0.015625,1.015625) + r4.yy;
        r13.yz = float2(0.125,0.125) * r13.xy;
        r13.x = r3.y * 0.03125 + r12.x;
        r14.xyzw = t2.SampleLevel(s1_s, r13.yx, 0).xyzw * noiseIntensity;
        r15.xyzw = t2.SampleLevel(s1_s, r13.zx, 0).xyzw * noiseIntensity;
        r15.xyzw = r15.xyzw * r6.wwww;
        r14.xyzw = r14.xyzw * r8.zzzz + r15.xyzw;
        r13.w = r3.y * 0.03125 + r12.z;
        r15.xyzw = t2.SampleLevel(s1_s, r13.yw, 0).xyzw * noiseIntensity;
        r16.xyzw = t2.SampleLevel(s1_s, r13.zw, 0).xyzw * noiseIntensity;
        r16.xyzw = r16.xyzw * r6.wwww;
        r15.xyzw = r15.xyzw * r8.zzzz + r16.xyzw;
        r12.xz = float2(1,1) + -r11.xz;
        r15.xyzw = r15.xyzw * r11.xxxx;
        r14.xyzw = r14.xyzw * r12.xxxx + r15.xyzw;
        r10.xyzw = -r14.xyzw * r2.xyzx + r10.xyzw;
        r10.xyzw = max(float4(0,0,0,0), r10.xyzw);
        r14.xyzw = r8.yyyy ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r3.y = r14.y + r7.w;
        r3.y = sqrt(r3.y);
        r3.y = r7.y * r14.x + r3.y;
        r3.w = r14.z + r3.w;
        r3.y = r3.y / r3.w;
        r3.y = r3.y * 0.4921875 + r14.w;
        r9.x = r3.y * 0.03125 + r8.x;
        r14.xyzw = t2.SampleLevel(s1_s, r9.yx, 0).xyzw * noiseIntensity;
        r15.xyzw = t2.SampleLevel(s1_s, r9.zx, 0).xyzw * noiseIntensity;
        r15.xyzw = r15.xyzw * r6.wwww;
        r14.xyzw = r14.xyzw * r8.zzzz + r15.xyzw;
        r9.w = r3.y * 0.03125 + r0.z;
        r15.xyzw = t2.SampleLevel(s1_s, r9.yw, 0).xyzw * noiseIntensity;
        r9.xyzw = t2.SampleLevel(s1_s, r9.zw, 0).xyzw * noiseIntensity;
        r9.xyzw = r9.xyzw * r6.wwww;
        r9.xyzw = r15.xyzw * r8.zzzz + r9.xyzw;
        r7.xyzw = r9.xyzw * r7.zzzz;
        r7.xyzw = r14.xyzw * r4.xxxx + r7.xyzw;
        r9.xyzw = r11.wwww ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r0.z = r11.y + r9.y;
        r0.z = sqrt(r0.z);
        r0.z = r3.z * r9.x + r0.z;
        r3.y = r9.z + r4.w;
        r0.z = r0.z / r3.y;
        r0.z = r0.z * 0.4921875 + r9.w;
        r13.x = r0.z * 0.03125 + r12.y;
        r9.xyzw = t2.SampleLevel(s1_s, r13.yx, 0).xyzw * noiseIntensity;
        r14.xyzw = t2.SampleLevel(s1_s, r13.zx, 0).xyzw * noiseIntensity;
        r14.xyzw = r14.xyzw * r6.wwww;
        r9.xyzw = r9.xyzw * r8.zzzz + r14.xyzw;
        r13.w = r0.z * 0.03125 + r12.w;
        r14.xyzw = t2.SampleLevel(s1_s, r13.yw, 0).xyzw * noiseIntensity;
        r13.xyzw = t2.SampleLevel(s1_s, r13.zw, 0).xyzw * noiseIntensity;
        r13.xyzw = r13.xyzw * r6.wwww;
        r8.xyzw = r14.xyzw * r8.zzzz + r13.xyzw;
        r8.xyzw = r8.xyzw * r11.zzzz;
        r8.xyzw = r9.xyzw * r12.zzzz + r8.xyzw;
        r7.xyzw = -r8.xyzw * r2.xyzx + r7.xyzw;
        r7.xyzw = max(float4(0,0,0,0), r7.xyzw);
        r7.xyzw = r7.xyzw + -r10.xyzw;
        r7.xyzw = r1.zzzz * r7.xyzw + r10.xyzw;
      } else {
        r0.z = r2.w * r2.w;
        r1.z = r2.w * r2.w + -4.04495993e+013;
        r1.z = sqrt(r1.z);
        r2.w = r2.w * r4.z;
        r0.z = r2.w * r2.w + -r0.z;
        r0.z = 4.04495993e+013 + r0.z;
        r3.y = cmp(r2.w < 0);
        r3.z = cmp(0 < r0.z);
        r3.y = r3.z ? r3.y : 0;
        r4.xyzw = r3.yyyy ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r3.y = r1.z * 1.10629435e-006 + 0.015625;
        r0.z = r4.y + r0.z;
        r0.z = sqrt(r0.z);
        r0.z = r2.w * r4.x + r0.z;
        r1.z = r4.z + r1.z;
        r0.z = r0.z / r1.z;
        r0.z = r0.z * 0.4921875 + r4.w;
        r1.z = max(-0.197500005, r0.x);
        r1.z = 5.34962368 * r1.z;
        r2.w = min(1, abs(r1.z));
        r3.z = max(1, abs(r1.z));
        r3.z = 1 / r3.z;
        r2.w = r3.z * r2.w;
        r3.z = r2.w * r2.w;
        r3.w = r3.z * 0.0208350997 + -0.0851330012;
        r3.w = r3.z * r3.w + 0.180141002;
        r3.w = r3.z * r3.w + -0.330299497;
        r3.z = r3.z * r3.w + 0.999866009;
        r3.w = r3.z * r2.w;
        r4.x = cmp(1 < abs(r1.z));
        r3.w = r3.w * -2 + 1.57079637;
        r3.w = r4.x ? r3.w : 0;
        r2.w = r2.w * r3.z + r3.w;
        r1.z = min(1, r1.z);
        r1.z = cmp(r1.z < -r1.z);
        r1.z = r1.z ? -r2.w : r2.w;
        r1.z = r1.z * 0.909090877 + 0.74000001;
        r1.z = r1.z * 0.484375 + 0.015625;
        r2.w = 1 + r3.x;
        r3.z = 3.5 * r2.w;
        r3.z = floor(r3.z);
        r2.w = r2.w * 3.5 + -r3.z;
        r3.w = 32 * r3.y;
        r4.x = floor(r3.w);
        r3.y = r3.y * 32 + 1;
        r3.y = floor(r3.y);
        r3.w = frac(r3.w);
        r1.z = r3.z + r1.z;
        r8.y = 0.125 * r1.z;
        r0.z = 0.03125 * r0.z;
        r8.z = r4.x * 0.03125 + r0.z;
        r4.xyzw = t2.SampleLevel(s1_s, r8.yz, 0).xyzw * noiseIntensity;
        r5.w = 1 + -r2.w;
        r1.z = 1 + r1.z;
        r8.x = 0.125 * r1.z;
        r9.xyzw = t2.SampleLevel(s1_s, r8.xz, 0).xyzw * noiseIntensity;
        r9.xyzw = r9.xyzw * r2.wwww;
        r4.xyzw = r4.xyzw * r5.wwww + r9.xyzw;
        r8.w = r3.y * 0.03125 + r0.z;
        r9.xyzw = t2.SampleLevel(s1_s, r8.yw, 0).xyzw * noiseIntensity;
        r8.xyzw = t2.SampleLevel(s1_s, r8.xw, 0).xyzw * noiseIntensity;
        r8.xyzw = r8.xyzw * r2.wwww;
        r8.xyzw = r9.xyzw * r5.wwww + r8.xyzw;
        r0.z = 1 + -r3.w;
        r8.xyzw = r8.xyzw * r3.wwww;
        r4.xyzw = r4.xyzw * r0.zzzz + r8.xyzw;
        r0.z = -4.04495993e+013 + r0.y;
        r0.z = sqrt(r0.z);
        r0.y = r1.y * r1.y + -r0.y;
        r0.y = 4.04495993e+013 + r0.y;
        r1.z = cmp(r1.y < 0);
        r3.y = cmp(0 < r0.y);
        r1.z = r1.z ? r3.y : 0;
        r8.xyzw = r1.zzzz ? float4(1,0,0,0.49609375) : float4(-1,7.66800036e+011,875671.188,0.50390625);
        r1.z = r0.z * 1.10629435e-006 + 0.015625;
        r0.yz = r8.yz + r0.yz;
        r0.y = sqrt(r0.y);
        r0.y = r1.y * r8.x + r0.y;
        r0.y = r0.y / r0.z;
        r0.y = r0.y * 0.4921875 + r8.w;
        r0.z = max(-0.197500005, r1.w);
        r0.yz = float2(0.03125,5.34962368) * r0.yz;
        r1.y = min(1, abs(r0.z));
        r1.w = max(1, abs(r0.z));
        r1.w = 1 / r1.w;
        r1.y = r1.y * r1.w;
        r1.w = r1.y * r1.y;
        r3.y = r1.w * 0.0208350997 + -0.0851330012;
        r3.y = r1.w * r3.y + 0.180141002;
        r3.y = r1.w * r3.y + -0.330299497;
        r1.w = r1.w * r3.y + 0.999866009;
        r3.y = r1.y * r1.w;
        r3.w = cmp(1 < abs(r0.z));
        r3.y = r3.y * -2 + 1.57079637;
        r3.y = r3.w ? r3.y : 0;
        r1.y = r1.y * r1.w + r3.y;
        r0.z = min(1, r0.z);
        r0.z = cmp(r0.z < -r0.z);
        r0.z = r0.z ? -r1.y : r1.y;
        r0.z = r0.z * 0.909090877 + 0.74000001;
        r0.z = r0.z * 0.484375 + r3.z;
        r1.y = 32 * r1.z;
        r1.z = r1.z * 32 + 1;
        r1.zw = floor(r1.zy);
        r1.y = frac(r1.y);
        r3.yz = float2(0.015625,1.015625) + r0.zz;
        r8.xy = float2(0.125,0.125) * r3.yz;
        r8.z = r1.w * 0.03125 + r0.y;
        r9.xyzw = t2.SampleLevel(s1_s, r8.xz, 0).xyzw * noiseIntensity;
        r10.xyzw = t2.SampleLevel(s1_s, r8.yz, 0).xyzw * noiseIntensity;
        r10.xyzw = r10.xyzw * r2.wwww;
        r9.xyzw = r9.xyzw * r5.wwww + r10.xyzw;
        r8.w = r1.z * 0.03125 + r0.y;
        r10.xyzw = t2.SampleLevel(s1_s, r8.xw, 0).xyzw * noiseIntensity;
        r8.xyzw = t2.SampleLevel(s1_s, r8.yw, 0).xyzw * noiseIntensity;
        r8.xyzw = r8.xyzw * r2.wwww;
        r8.xyzw = r10.xyzw * r5.wwww + r8.xyzw;
        r0.y = 1 + -r1.y;
        r8.xyzw = r8.xyzw * r1.yyyy;
        r8.xyzw = r9.xyzw * r0.yyyy + r8.xyzw;
        r4.xyzw = -r8.xyzw * r2.xyzx + r4.xyzw;
        r7.xyzw = max(float4(0,0,0,0), r4.xyzw);
      }
      r0.x = saturate(50 * r0.x);
      r0.y = r0.x * -2 + 3;
      r0.x = r0.x * r0.x;
      r0.x = r0.y * r0.x;
      r0.x = r7.w * r0.x;
      r0.xyz = r7.xyz * r0.xxx;
      r1.y = max(9.99999975e-005, r7.x);
      r0.xyz = r0.xyz / r1.yyy;
      r0.xyz = float3(1,0.429629624,0.175226584) * r0.xyz;
      r1.y = r3.x * r3.x + 1;
      r1.w = -r3.x * 1.5 + 1.5625;
      r1.w = log2(r1.w);
      r1.zw = float2(0.0596831143,-1.5) * r1.yw;
      r1.w = exp2(r1.w);
      r1.y = r1.y * r1.w;
      r1.y = 0.0203795992 * r1.y;
      r0.xyz = r1.yyy * r0.xyz;
      r0.xyz = r7.xyz * r1.zzz + r0.xyz;
    } else {
      r2.xyz = float3(1,1,1);
      r0.xyz = float3(0,0,0);
    }
    r0.xyz = r0.xyz * r0.www;
    r0.xyz = r1.xxx * r0.xyz;
    r6.xyz = r0.xyz * r5.xyz + r6.xyz;
    r5.xyz = r5.xyz * r2.xyz;
  }
  o1.xyz = float3(1,1,1) + -r5.xyz;
  o0.xyz = r6.xyz;
  o0.w = 0;
  o1.w = 0;
}